{
    "traces": {
        "heatmap": {
            "attributes": {
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "zmax": {
                    "valType": "number",
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "heatmap",
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "zsmooth": {
                    "dflt": false,
                    "valType": "enumerated",
                    "description": "Picks a smoothing algorithm use to smooth `z` data.",
                    "role": "style",
                    "values": [
                        "fast",
                        "best",
                        false
                    ]
                },
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "y0": {
                    "valType": "any",
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "dx": {
                    "valType": "number",
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the z data.",
                    "role": "data"
                },
                "transpose": {
                    "valType": "boolean",
                    "description": "Transposes the z data.",
                    "role": "info",
                    "dflt": false
                },
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "zauto": {
                    "valType": "boolean",
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "dflt": true
                },
                "x0": {
                    "valType": "any",
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "connectgaps": {
                    "valType": "boolean",
                    "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.",
                    "role": "info",
                    "dflt": false
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "valType": "data_array",
                    "description": "Sets the text elements associated with each z value.",
                    "role": "data"
                },
                "autocolorscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "dflt": false
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "dy": {
                    "valType": "number",
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "xtype": {
                    "valType": "enumerated",
                    "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).",
                    "role": "info",
                    "values": [
                        "array",
                        "scaled"
                    ]
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "zmin": {
                    "valType": "number",
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                },
                "ytype": {
                    "valType": "enumerated",
                    "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)",
                    "role": "info",
                    "values": [
                        "array",
                        "scaled"
                    ]
                }
            },
            "description": "The data that describes the heatmap value-to-color mapping is set in `z`. Data in `z` can either be a {2D array} of values (ragged or not) or a 1D array of values. In the case where `z` is a {2D array}, say that `z` has N rows and M columns. Then, by default, the resulting heatmap will have N partitions along the y axis and M partitions along the x axis. In other words, the i-th row/ j-th column cell in `z` is mapped to the i-th partition of the y axis (starting from the bottom of the plot) and the j-th partition of the x-axis (starting from the left of the plot). This behavior can be flipped by using `transpose`. Moreover, `x` (`y`) can be provided with M or M+1 (N or N+1) elements. If M (N), then the coordinates correspond to the center of the heatmap cells and the cells have equal width. If M+1 (N+1), then the coordinates correspond to the edges of the heatmap cells. In the case where `z` is a 1D {array}, the x and y coordinates must be provided in `x` and `y` respectively to form data triplets."
        },
        "histogram": {
            "attributes": {
                "orientation": {
                    "valType": "enumerated",
                    "description": "Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).",
                    "role": "info",
                    "values": [
                        "v",
                        "h"
                    ]
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "nbinsy": {
                    "valType": "integer",
                    "description": "Sets the number of y axis bins.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "autobiny": {
                    "valType": "boolean",
                    "description": "Determines whether or not the y axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "dflt": true
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "histogram",
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "marker": {
                    "line": {
                        "reversescale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "dflt": false
                        },
                        "autocolorscale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "dflt": true
                        },
                        "cauto": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "dflt": true
                        },
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "cmin": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "colorscale": {
                            "valType": "colorscale",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style"
                        },
                        "cmax": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "width": {
                            "dflt": 0,
                            "min": 0,
                            "valType": "number",
                            "arrayOk": true,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style"
                        }
                    },
                    "cauto": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "dflt": true
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "showscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "dflt": false
                    },
                    "reversescale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "dflt": false
                    },
                    "autocolorscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "dflt": true
                    },
                    "cmin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "colorbar": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "tickangle": {
                            "valType": "angle",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "dflt": "auto"
                        },
                        "outlinewidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "title": {
                            "valType": "string",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "dflt": "Click to enter colorscale title"
                        },
                        "ticksuffix": {
                            "valType": "string",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tick0": {
                            "valType": "number",
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "dflt": 0
                        },
                        "len": {
                            "valType": "number",
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "tickvals": {
                            "valType": "data_array",
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "showticklabels": {
                            "valType": "boolean",
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "dflt": true
                        },
                        "nticks": {
                            "valType": "integer",
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "titleside": {
                            "dflt": "top",
                            "valType": "enumerated",
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ]
                        },
                        "thickness": {
                            "valType": "number",
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "min": 0,
                            "dflt": 30
                        },
                        "outlinecolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "titlefont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets this color bar's title font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "x": {
                            "dflt": 1.02,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "valType": "enumerated",
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "ticks": {
                            "dflt": "",
                            "valType": "enumerated",
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ]
                        },
                        "ticktextsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info"
                        },
                        "tickformat": {
                            "valType": "string",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickfont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the tick font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "dtick": {
                            "valType": "any",
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "dflt": 1
                        },
                        "xpad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "ticklen": {
                            "valType": "number",
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 5
                        },
                        "showexponent": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "ypad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "valType": "enumerated",
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ]
                        },
                        "role": "object",
                        "tickmode": {
                            "valType": "enumerated",
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ]
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "tickprefix": {
                            "valType": "string",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickcolor": {
                            "valType": "color",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "ticktext": {
                            "valType": "data_array",
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "tickvalssrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info"
                        },
                        "tickwidth": {
                            "valType": "number",
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "y": {
                            "dflt": 0.5,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "valType": "enumerated",
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        }
                    },
                    "colorscale": {
                        "valType": "colorscale",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.",
                        "role": "style"
                    },
                    "cmax": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    }
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the sample data to be binned on the x axis.",
                    "role": "data"
                },
                "histnorm": {
                    "dflt": "",
                    "valType": "enumerated",
                    "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).",
                    "role": "style",
                    "values": [
                        "",
                        "percent",
                        "probability",
                        "density",
                        "probability density"
                    ]
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "error_y": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "error_x": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "ybins": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting value for the y axis bins.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "size": {
                        "valType": "any",
                        "description": "Sets the step in-between value each y axis bin.",
                        "role": "style",
                        "dflt": 1
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end value for the y axis bins.",
                        "role": "style",
                        "dflt": null
                    }
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "histfunc": {
                    "dflt": "count",
                    "valType": "enumerated",
                    "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.",
                    "role": "style",
                    "values": [
                        "count",
                        "sum",
                        "avg",
                        "min",
                        "max"
                    ]
                },
                "nbinsx": {
                    "valType": "integer",
                    "description": "Sets the number of x axis bins.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "text": {
                    "dflt": "",
                    "valType": "string",
                    "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "arrayOk": true
                },
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "autobinx": {
                    "valType": "boolean",
                    "description": "Determines whether or not the x axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "dflt": true
                },
                "_deprecated": {
                    "bardir": {
                        "valType": "enumerated",
                        "description": "Renamed to `orientation`.",
                        "role": "info",
                        "values": [
                            "v",
                            "h"
                        ]
                    }
                },
                "xbins": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting value for the x axis bins.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "size": {
                        "valType": "any",
                        "description": "Sets the step in-between value each x axis bin.",
                        "role": "style",
                        "dflt": 1
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end value for the x axis bins.",
                        "role": "style",
                        "dflt": null
                    }
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the sample data to be binned on the y axis.",
                    "role": "data"
                }
            },
            "description": "The sample data from which statistics are computed is set in `x` for vertically spanning histograms and in `y` for horizontally spanning histograms. Binning options are set `xbins` and `ybins` respectively if no aggregation data is provided.",
            "layoutAttributes": {
                "barnorm": {
                    "dflt": "",
                    "valType": "enumerated",
                    "description": "Sets the normalization for bar traces on the graph. With *fraction*, the value of each bar is divide by the sum of the values at the location coordinate. With *percent*, the results form *fraction* are presented in percents.",
                    "role": "info",
                    "values": [
                        "",
                        "fraction",
                        "percent"
                    ]
                },
                "bargap": {
                    "valType": "number",
                    "description": "Sets the gap (in plot fraction) between bars of adjacent location coordinates.",
                    "max": 1,
                    "role": "style",
                    "min": 0
                },
                "barmode": {
                    "dflt": "group",
                    "valType": "enumerated",
                    "description": "Determines how bars at the same location coordinate are displayed on the graph. With *stack*, the bars are stacked on top of one another With *group*, the bars are plotted next to one another centered around the shared location. With *overlay*, the bars are plotted over one another, you might need to an *opacity* to see multiple bars.",
                    "role": "info",
                    "values": [
                        "stack",
                        "group",
                        "overlay"
                    ]
                },
                "bargroupgap": {
                    "dflt": 0,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the gap (in plot fraction) between bars of the same location coordinate.",
                    "role": "style"
                }
            }
        },
        "scattergl": {
            "attributes": {
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "dx": {
                    "valType": "number",
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "scattergl",
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "error_x": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "marker": {
                    "sizemode": {
                        "dflt": "diameter",
                        "valType": "enumerated",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "values": [
                            "diameter",
                            "area"
                        ]
                    },
                    "line": {
                        "reversescale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "dflt": false
                        },
                        "autocolorscale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "dflt": true
                        },
                        "cauto": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "dflt": true
                        },
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "cmin": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "colorscale": {
                            "valType": "colorscale",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style"
                        },
                        "cmax": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "width": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style",
                            "min": 0,
                            "arrayOk": true
                        }
                    },
                    "cauto": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "symbol": {
                        "dflt": "circle",
                        "valType": "enumerated",
                        "arrayOk": true,
                        "description": "Sets the marker symbol type.",
                        "role": "style",
                        "values": [
                            "circle",
                            "circle-open",
                            "square",
                            "square-open",
                            "diamond",
                            "diamond-open",
                            "cross",
                            "x"
                        ]
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "opacity": {
                        "valType": "number",
                        "max": 1,
                        "min": 0,
                        "arrayOk": true,
                        "description": "Sets the marker opacity.",
                        "role": "style"
                    },
                    "size": {
                        "dflt": 6,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "role": "style"
                    },
                    "showscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "dflt": false
                    },
                    "reversescale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "dflt": false
                    },
                    "autocolorscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizemin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "cmin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "opacitysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info"
                    },
                    "sizeref": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "dflt": 1
                    },
                    "colorbar": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "tickangle": {
                            "valType": "angle",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "dflt": "auto"
                        },
                        "outlinewidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "title": {
                            "valType": "string",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "dflt": "Click to enter colorscale title"
                        },
                        "ticksuffix": {
                            "valType": "string",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tick0": {
                            "valType": "number",
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "dflt": 0
                        },
                        "len": {
                            "valType": "number",
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "tickvals": {
                            "valType": "data_array",
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "showticklabels": {
                            "valType": "boolean",
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "dflt": true
                        },
                        "nticks": {
                            "valType": "integer",
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "titleside": {
                            "dflt": "top",
                            "valType": "enumerated",
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ]
                        },
                        "thickness": {
                            "valType": "number",
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "min": 0,
                            "dflt": 30
                        },
                        "outlinecolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "titlefont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets this color bar's title font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "x": {
                            "dflt": 1.02,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "valType": "enumerated",
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "ticks": {
                            "dflt": "",
                            "valType": "enumerated",
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ]
                        },
                        "ticktextsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info"
                        },
                        "tickformat": {
                            "valType": "string",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickfont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the tick font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "dtick": {
                            "valType": "any",
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "dflt": 1
                        },
                        "xpad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "ticklen": {
                            "valType": "number",
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 5
                        },
                        "showexponent": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "ypad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "valType": "enumerated",
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ]
                        },
                        "role": "object",
                        "tickmode": {
                            "valType": "enumerated",
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ]
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "tickprefix": {
                            "valType": "string",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickcolor": {
                            "valType": "color",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "ticktext": {
                            "valType": "data_array",
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "tickvalssrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info"
                        },
                        "tickwidth": {
                            "valType": "number",
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "y": {
                            "dflt": 0.5,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "valType": "enumerated",
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        }
                    },
                    "colorscale": {
                        "valType": "colorscale",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.",
                        "role": "style"
                    },
                    "cmax": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "symbolsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info"
                    }
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "y0": {
                    "valType": "any",
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "fillcolor": {
                    "valType": "color",
                    "description": "Sets the fill color.",
                    "role": "style"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "error_y": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "x0": {
                    "valType": "any",
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "line": {
                    "color": {
                        "valType": "color",
                        "description": "Sets the line color.",
                        "role": "style"
                    },
                    "role": "object",
                    "dash": {
                        "dflt": "solid",
                        "valType": "enumerated",
                        "description": "Sets the style of the lines.",
                        "role": "style",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ]
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "text": {
                    "dflt": "",
                    "valType": "string",
                    "description": "Sets text elements associated with each (x,y) pair to appear on hover. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "arrayOk": true
                },
                "fill": {
                    "dflt": "none",
                    "valType": "enumerated",
                    "description": "Sets the area to fill with a solid color. Use with `fillcolor`.",
                    "role": "style",
                    "values": [
                        "none",
                        "tozeroy",
                        "tozerox"
                    ]
                },
                "mode": {
                    "valType": "flaglist",
                    "description": "Determines the drawing mode for this scatter trace.",
                    "role": "info",
                    "flags": [
                        "lines",
                        "markers"
                    ],
                    "extras": [
                        "none"
                    ]
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "dy": {
                    "valType": "number",
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                }
            },
            "description": "The data visualized as scatter point or lines is set in `x` and `y` using the WebGl plotting engine. Bubble charts are achieved by setting `marker.size` and/or `marker.color` to a numerical arrays."
        },
        "mesh3d": {
            "attributes": {
                "facecolor": {
                    "valType": "data_array",
                    "description": "Sets the color of each face Overrides *color* and *vertexcolor*.",
                    "role": "data"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "flatshading": {
                    "valType": "boolean",
                    "description": "Determines whether or not normal smoothing is applied to the meshes, creating meshes with a low-poly look.",
                    "role": "style",
                    "dflt": false
                },
                "i": {
                    "valType": "data_array",
                    "description": "Sets the indices of x coordinates of the vertices",
                    "role": "data"
                },
                "intensity": {
                    "valType": "data_array",
                    "description": "Sets the vertex intensity values, used for plotting fields on meshes",
                    "role": "data"
                },
                "opacity": {
                    "valType": "number",
                    "max": 1,
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "delaunayaxis": {
                    "dflt": "z",
                    "valType": "enumerated",
                    "description": "Sets the Delaunay axis from which the triangulation of the mesh takes place. An alternative to setting the `i`, `j`, `k` indices triplets.",
                    "role": "info",
                    "values": [
                        "x",
                        "y",
                        "z"
                    ]
                },
                "alphahull": {
                    "valType": "number",
                    "description": "Sets the shape of the mesh If *-1*, Delaunay triangulation is used If *>0*, the alpha-shape algorithm is used If *0*,  the convex-hull algorithm is used An alternative to the `i`, `j`, `k` indices triplets.",
                    "role": "style",
                    "dflt": -1
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "jsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  j .",
                    "role": "info"
                },
                "vertexcolorsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  vertexcolor .",
                    "role": "info"
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates of the vertices",
                    "role": "data"
                },
                "scene": {
                    "valType": "sceneid",
                    "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.",
                    "role": "info",
                    "dflt": "scene"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the z coordinates of the vertices",
                    "role": "data"
                },
                "ksrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  k .",
                    "role": "info"
                },
                "isrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  i .",
                    "role": "info"
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "intensitysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  intensity .",
                    "role": "info"
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "j": {
                    "valType": "data_array",
                    "description": "Sets the indices of y coordinates of the vertices",
                    "role": "data"
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "type": "mesh3d",
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                },
                "facecolorsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  facecolor .",
                    "role": "info"
                },
                "vertexcolor": {
                    "valType": "data_array",
                    "description": "Sets the color of each vertex Overrides *color*.",
                    "role": "data"
                },
                "lighting": {
                    "ambient": {
                        "valType": "number",
                        "max": 1,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.8
                    },
                    "diffuse": {
                        "valType": "number",
                        "max": 1,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.8
                    },
                    "fresnel": {
                        "valType": "number",
                        "max": 5,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.2
                    },
                    "roughness": {
                        "valType": "number",
                        "max": 1,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.5
                    },
                    "role": "object",
                    "specular": {
                        "valType": "number",
                        "max": 2,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.05
                    }
                },
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "k": {
                    "valType": "data_array",
                    "description": "Sets the indices of z coordinates of the vertices",
                    "role": "data"
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "color": {
                    "valType": "color",
                    "description": "Sets the color of the whole mesh",
                    "role": "style"
                },
                "contour": {
                    "show": {
                        "valType": "boolean",
                        "description": "Sets whether or not dynamic contours are shown on hover",
                        "role": "info",
                        "dflt": false
                    },
                    "color": {
                        "valType": "color",
                        "role": "style",
                        "dflt": "#000"
                    },
                    "role": "object",
                    "width": {
                        "valType": "number",
                        "max": 16,
                        "role": "style",
                        "min": 1,
                        "dflt": 2
                    }
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates of the vertices",
                    "role": "data"
                }
            },
            "description": "Draws sets of triangles with coordinates given by three 1-dimensional arrays in `x`, `y`, `z` and (1) a sets of `i`, `j`, `k` indices (2) Delaunay triangulation or (3) the Alpha-shape algorithm or (4) the Convex-hull algorithm"
        },
        "scatter": {
            "attributes": {
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "dx": {
                    "valType": "number",
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "textposition": {
                    "dflt": "middle center",
                    "valType": "enumerated",
                    "arrayOk": true,
                    "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates.",
                    "role": "style",
                    "values": [
                        "top left",
                        "top center",
                        "top right",
                        "middle left",
                        "middle center",
                        "middle right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ]
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "scatter",
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "error_x": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "marker": {
                    "sizemode": {
                        "dflt": "diameter",
                        "valType": "enumerated",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "values": [
                            "diameter",
                            "area"
                        ]
                    },
                    "line": {
                        "reversescale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "dflt": false
                        },
                        "autocolorscale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "dflt": true
                        },
                        "cauto": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "dflt": true
                        },
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "cmin": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "colorscale": {
                            "valType": "colorscale",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style"
                        },
                        "cmax": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "width": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style",
                            "min": 0,
                            "arrayOk": true
                        }
                    },
                    "cauto": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "opacity": {
                        "valType": "number",
                        "max": 1,
                        "min": 0,
                        "arrayOk": true,
                        "description": "Sets the marker opacity.",
                        "role": "style"
                    },
                    "maxdisplayed": {
                        "valType": "number",
                        "description": "Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "cmin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "sizeref": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "dflt": 1
                    },
                    "sizemin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "reversescale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "dflt": false
                    },
                    "symbol": {
                        "dflt": "circle",
                        "valType": "enumerated",
                        "arrayOk": true,
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "role": "style",
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ]
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "showscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "dflt": false
                    },
                    "size": {
                        "dflt": 6,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "role": "style"
                    },
                    "autocolorscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "dflt": true
                    },
                    "opacitysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info"
                    },
                    "colorbar": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "tickangle": {
                            "valType": "angle",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "dflt": "auto"
                        },
                        "outlinewidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "title": {
                            "valType": "string",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "dflt": "Click to enter colorscale title"
                        },
                        "ticksuffix": {
                            "valType": "string",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tick0": {
                            "valType": "number",
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "dflt": 0
                        },
                        "len": {
                            "valType": "number",
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "tickvals": {
                            "valType": "data_array",
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "showticklabels": {
                            "valType": "boolean",
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "dflt": true
                        },
                        "nticks": {
                            "valType": "integer",
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "titleside": {
                            "dflt": "top",
                            "valType": "enumerated",
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ]
                        },
                        "thickness": {
                            "valType": "number",
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "min": 0,
                            "dflt": 30
                        },
                        "outlinecolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "titlefont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets this color bar's title font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "x": {
                            "dflt": 1.02,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "valType": "enumerated",
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "ticks": {
                            "dflt": "",
                            "valType": "enumerated",
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ]
                        },
                        "ticktextsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info"
                        },
                        "tickformat": {
                            "valType": "string",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickfont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the tick font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "dtick": {
                            "valType": "any",
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "dflt": 1
                        },
                        "xpad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "ticklen": {
                            "valType": "number",
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 5
                        },
                        "showexponent": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "ypad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "valType": "enumerated",
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ]
                        },
                        "role": "object",
                        "tickmode": {
                            "valType": "enumerated",
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ]
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "tickprefix": {
                            "valType": "string",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickcolor": {
                            "valType": "color",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "ticktext": {
                            "valType": "data_array",
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "tickvalssrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info"
                        },
                        "tickwidth": {
                            "valType": "number",
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "y": {
                            "dflt": 0.5,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "valType": "enumerated",
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        }
                    },
                    "colorscale": {
                        "valType": "colorscale",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.",
                        "role": "style"
                    },
                    "cmax": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "symbolsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info"
                    }
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "y0": {
                    "valType": "any",
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "fillcolor": {
                    "valType": "color",
                    "description": "Sets the fill color.",
                    "role": "style"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "t": {
                    "valType": "data_array",
                    "description": "For polar chart only.Sets the angular coordinates.",
                    "role": "data"
                },
                "x0": {
                    "valType": "any",
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "error_y": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "textpositionsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info"
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "textfont": {
                    "family": {
                        "arrayOk": true,
                        "strict": true,
                        "noBlank": true,
                        "role": "style",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "description": "Sets the text font.",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1,
                        "arrayOk": true
                    },
                    "familysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  family .",
                        "role": "info"
                    }
                },
                "line": {
                    "dash": {
                        "dflt": "solid",
                        "valType": "string",
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ]
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the line color.",
                        "role": "style"
                    },
                    "role": "object",
                    "shape": {
                        "dflt": "linear",
                        "valType": "enumerated",
                        "description": "Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes.",
                        "role": "style",
                        "values": [
                            "linear",
                            "spline",
                            "hv",
                            "vh",
                            "hvh",
                            "vhv"
                        ]
                    },
                    "smoothing": {
                        "dflt": 1,
                        "max": 1.3,
                        "min": 0,
                        "valType": "number",
                        "description": "Has only an effect if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape).",
                        "role": "style"
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "dflt": "",
                    "valType": "string",
                    "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "arrayOk": true
                },
                "fill": {
                    "dflt": "none",
                    "valType": "enumerated",
                    "description": "Sets the area to fill with a solid color. Use with `fillcolor`.",
                    "role": "style",
                    "values": [
                        "none",
                        "tozeroy",
                        "tozerox",
                        "tonexty",
                        "tonextx"
                    ]
                },
                "r": {
                    "valType": "data_array",
                    "description": "For polar chart only.Sets the radial coordinates.",
                    "role": "data"
                },
                "tsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  t .",
                    "role": "info"
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "dy": {
                    "valType": "number",
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "connectgaps": {
                    "valType": "boolean",
                    "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected.",
                    "role": "info",
                    "dflt": false
                },
                "rsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  r .",
                    "role": "info"
                },
                "mode": {
                    "valType": "flaglist",
                    "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.",
                    "role": "info",
                    "flags": [
                        "lines",
                        "markers",
                        "text"
                    ],
                    "extras": [
                        "none"
                    ]
                }
            },
            "description": "The scatter trace type encompasses line charts, scatter charts, text charts, and bubble charts. The data visualized as scatter point or lines is set in `x` and `y`. Text (appearing either on the chart or on hover only) is via `text`. Bubble charts are achieved by setting `marker.size` and/or `marker.color` to a numerical arrays."
        },
        "histogram2d": {
            "attributes": {
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "nbinsy": {
                    "valType": "integer",
                    "description": "Sets the number of y axis bins.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "zmax": {
                    "valType": "number",
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "autobiny": {
                    "valType": "boolean",
                    "description": "Determines whether or not the y axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "dflt": true
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "zsmooth": {
                    "dflt": false,
                    "valType": "enumerated",
                    "description": "Picks a smoothing algorithm use to smooth `z` data.",
                    "role": "style",
                    "values": [
                        "fast",
                        "best",
                        false
                    ]
                },
                "marker": {
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "data_array",
                        "description": "Sets the aggregation data.",
                        "role": "data"
                    },
                    "role": "object"
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the sample data to be binned on the x axis.",
                    "role": "data"
                },
                "histnorm": {
                    "dflt": "",
                    "valType": "enumerated",
                    "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).",
                    "role": "style",
                    "values": [
                        "",
                        "percent",
                        "probability",
                        "density",
                        "probability density"
                    ]
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the aggregation data.",
                    "role": "data"
                },
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "zauto": {
                    "valType": "boolean",
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "dflt": true
                },
                "ybins": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting value for the y axis bins.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "size": {
                        "valType": "any",
                        "description": "Sets the step in-between value each y axis bin.",
                        "role": "style",
                        "dflt": 1
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end value for the y axis bins.",
                        "role": "style",
                        "dflt": null
                    }
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "zmin": {
                    "valType": "number",
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "nbinsx": {
                    "valType": "integer",
                    "description": "Sets the number of x axis bins.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "xbins": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting value for the x axis bins.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "size": {
                        "valType": "any",
                        "description": "Sets the step in-between value each x axis bin.",
                        "role": "style",
                        "dflt": 1
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end value for the x axis bins.",
                        "role": "style",
                        "dflt": null
                    }
                },
                "type": "histogram2d",
                "autobinx": {
                    "valType": "boolean",
                    "description": "Determines whether or not the x axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "dflt": true
                },
                "autocolorscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "dflt": false
                },
                "histfunc": {
                    "dflt": "count",
                    "valType": "enumerated",
                    "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.",
                    "role": "style",
                    "values": [
                        "count",
                        "sum",
                        "avg",
                        "min",
                        "max"
                    ]
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the sample data to be binned on the y axis.",
                    "role": "data"
                }
            },
            "hrName": "histogram_2d",
            "description": "The sample data from which statistics are computed is set in `x` and `y` (where `x` and `y` represent marginal distributions, binning is set in `xbins` and `ybins` in this case) or `z` (where `z` represent the 2D distribution and binning set, binning is set by `x` and `y` in this case). The resulting distribution is visualized as a heatmap."
        },
        "pie": {
            "attributes": {
                "direction": {
                    "dflt": "counterclockwise",
                    "valType": "enumerated",
                    "description": "Specifies the direction at which succeeding sectors follow one another.",
                    "role": "style",
                    "values": [
                        "clockwise",
                        "counterclockwise"
                    ]
                },
                "pull": {
                    "dflt": 0,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "arrayOk": true,
                    "description": "Sets the fraction of larger radius to pull the sectors out from the center. This can be a constant to pull all slices apart from each other equally or an array to highlight one or more slices.",
                    "role": "style"
                },
                "pullsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  pull .",
                    "role": "info"
                },
                "labels": {
                    "valType": "data_array",
                    "description": "Sets the sector labels.",
                    "role": "data"
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "dlabel": {
                    "valType": "number",
                    "description": "Sets the label step. See `label0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "textposition": {
                    "dflt": "auto",
                    "valType": "enumerated",
                    "arrayOk": true,
                    "description": "Specifies the location of the `textinfo`.",
                    "role": "info",
                    "values": [
                        "inside",
                        "outside",
                        "auto",
                        "none"
                    ]
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "pie",
                "labelssrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  labels .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "sort": {
                    "valType": "boolean",
                    "description": "Determines whether or not the sectors of reordered from largest to smallest.",
                    "role": "style",
                    "dflt": true
                },
                "marker": {
                    "colors": {
                        "valType": "data_array",
                        "description": "Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.",
                        "role": "data"
                    },
                    "line": {
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "dflt": "#444",
                            "valType": "color",
                            "description": "Sets the color of the line enclosing each sector.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "width": {
                            "dflt": 0,
                            "min": 0,
                            "valType": "number",
                            "arrayOk": true,
                            "description": "Sets the width (in px) of the line enclosing each sector.",
                            "role": "style"
                        }
                    },
                    "role": "object",
                    "colorssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  colors .",
                        "role": "info"
                    }
                },
                "rotation": {
                    "dflt": 0,
                    "max": 360,
                    "min": -360,
                    "valType": "number",
                    "description": "Instead of the first slice starting at 12 o'clock, rotate to some other angle.",
                    "role": "style"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "insidetextfont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets the font used for `textinfo` lying inside the pie.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "textinfo": {
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on the graph.",
                    "role": "info",
                    "flags": [
                        "label",
                        "text",
                        "value",
                        "percent"
                    ],
                    "extras": [
                        "none"
                    ]
                },
                "domain": {
                    "role": "object",
                    "x": {
                        "valType": "info_array",
                        "description": "Sets the horizontal domain of this pie trace (in plot fraction).",
                        "items": [
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            },
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            }
                        ],
                        "role": "info",
                        "dflt": [
                            0,
                            1
                        ]
                    },
                    "y": {
                        "valType": "info_array",
                        "description": "Sets the vertical domain of this pie trace (in plot fraction).",
                        "items": [
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            },
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            }
                        ],
                        "role": "info",
                        "dflt": [
                            0,
                            1
                        ]
                    }
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "outsidetextfont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets the font used for `textinfo` lying outside the pie.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "textpositionsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info"
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "textfont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets the font used for `textinfo`.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "values": {
                    "valType": "data_array",
                    "description": "Sets the values of the sectors of this pie chart.",
                    "role": "data"
                },
                "scalegroup": {
                    "valType": "string",
                    "description": "If there are multiple pies that should be sized according to their totals, link them by providing a non-empty group id here shared by every trace in the same group.",
                    "role": "info",
                    "dflt": ""
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "hole": {
                    "dflt": 0,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the fraction of the radius to cut out of the pie. Use this to make a donut chart.",
                    "role": "style"
                },
                "text": {
                    "valType": "data_array",
                    "description": "Sets text elements associated with each sector.",
                    "role": "data"
                },
                "label0": {
                    "valType": "number",
                    "description": "Alternate to `labels`. Builds a numeric set of labels. Use with `dlabel` where `label0` is the starting label and `dlabel` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "label",
                        "text",
                        "value",
                        "percent",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "valuessrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  values .",
                    "role": "info"
                }
            },
            "description": "A data visualized by the sectors of the pie is set in `values`. The sector labels are set in `labels`. The sector colors are set in `marker.colors`",
            "layoutAttributes": {
                "hiddenlabelssrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  hiddenlabels .",
                    "role": "info"
                },
                "hiddenlabels": {
                    "valType": "data_array",
                    "role": "data"
                }
            }
        },
        "bar": {
            "attributes": {
                "orientation": {
                    "valType": "enumerated",
                    "description": "Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).",
                    "role": "info",
                    "values": [
                        "v",
                        "h"
                    ]
                },
                "r": {
                    "valType": "data_array",
                    "description": "For polar chart only.Sets the radial coordinates.",
                    "role": "data"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "dx": {
                    "valType": "number",
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "bar",
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "error_x": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "marker": {
                    "line": {
                        "reversescale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "dflt": false
                        },
                        "autocolorscale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "dflt": true
                        },
                        "cauto": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "dflt": true
                        },
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "cmin": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "colorscale": {
                            "valType": "colorscale",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style"
                        },
                        "cmax": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "width": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style",
                            "min": 0,
                            "arrayOk": true
                        }
                    },
                    "cauto": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "dflt": true
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "showscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "dflt": false
                    },
                    "reversescale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "dflt": false
                    },
                    "autocolorscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "dflt": true
                    },
                    "cmin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "colorbar": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "tickangle": {
                            "valType": "angle",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "dflt": "auto"
                        },
                        "outlinewidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "title": {
                            "valType": "string",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "dflt": "Click to enter colorscale title"
                        },
                        "ticksuffix": {
                            "valType": "string",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tick0": {
                            "valType": "number",
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "dflt": 0
                        },
                        "len": {
                            "valType": "number",
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "tickvals": {
                            "valType": "data_array",
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "showticklabels": {
                            "valType": "boolean",
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "dflt": true
                        },
                        "nticks": {
                            "valType": "integer",
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "titleside": {
                            "dflt": "top",
                            "valType": "enumerated",
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ]
                        },
                        "thickness": {
                            "valType": "number",
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "min": 0,
                            "dflt": 30
                        },
                        "outlinecolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "titlefont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets this color bar's title font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "x": {
                            "dflt": 1.02,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "valType": "enumerated",
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "ticks": {
                            "dflt": "",
                            "valType": "enumerated",
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ]
                        },
                        "ticktextsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info"
                        },
                        "tickformat": {
                            "valType": "string",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickfont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the tick font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "dtick": {
                            "valType": "any",
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "dflt": 1
                        },
                        "xpad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "ticklen": {
                            "valType": "number",
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 5
                        },
                        "showexponent": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "ypad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "valType": "enumerated",
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ]
                        },
                        "role": "object",
                        "tickmode": {
                            "valType": "enumerated",
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ]
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "tickprefix": {
                            "valType": "string",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickcolor": {
                            "valType": "color",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "ticktext": {
                            "valType": "data_array",
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "tickvalssrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info"
                        },
                        "tickwidth": {
                            "valType": "number",
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "y": {
                            "dflt": 0.5,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "valType": "enumerated",
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        }
                    },
                    "colorscale": {
                        "valType": "colorscale",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.",
                        "role": "style"
                    },
                    "cmax": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    }
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "y0": {
                    "valType": "any",
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "t": {
                    "valType": "data_array",
                    "description": "For polar chart only.Sets the angular coordinates.",
                    "role": "data"
                },
                "error_y": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "x0": {
                    "valType": "any",
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "text": {
                    "dflt": "",
                    "valType": "string",
                    "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "arrayOk": true
                },
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "_deprecated": {
                    "bardir": {
                        "valType": "enumerated",
                        "description": "Renamed to `orientation`.",
                        "role": "info",
                        "values": [
                            "v",
                            "h"
                        ]
                    }
                },
                "tsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  t .",
                    "role": "info"
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "dy": {
                    "valType": "number",
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "rsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  r .",
                    "role": "info"
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                }
            },
            "description": "The data visualized by the span of the bars is set in `y` if `orientation` is set th *v* (the default) and the labels are set in `x`. By setting `orientation` to *h*, the roles are interchanged.",
            "layoutAttributes": {
                "barnorm": {
                    "dflt": "",
                    "valType": "enumerated",
                    "description": "Sets the normalization for bar traces on the graph. With *fraction*, the value of each bar is divide by the sum of the values at the location coordinate. With *percent*, the results form *fraction* are presented in percents.",
                    "role": "info",
                    "values": [
                        "",
                        "fraction",
                        "percent"
                    ]
                },
                "bargap": {
                    "valType": "number",
                    "description": "Sets the gap (in plot fraction) between bars of adjacent location coordinates.",
                    "max": 1,
                    "role": "style",
                    "min": 0
                },
                "barmode": {
                    "dflt": "group",
                    "valType": "enumerated",
                    "description": "Determines how bars at the same location coordinate are displayed on the graph. With *stack*, the bars are stacked on top of one another With *group*, the bars are plotted next to one another centered around the shared location. With *overlay*, the bars are plotted over one another, you might need to an *opacity* to see multiple bars.",
                    "role": "info",
                    "values": [
                        "stack",
                        "group",
                        "overlay"
                    ]
                },
                "bargroupgap": {
                    "dflt": 0,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the gap (in plot fraction) between bars of the same location coordinate.",
                    "role": "style"
                }
            }
        },
        "box": {
            "attributes": {
                "orientation": {
                    "valType": "enumerated",
                    "description": "Sets the orientation of the box(es). If *v* (*h*), the distribution is visualized along the vertical (horizontal).",
                    "role": "style",
                    "values": [
                        "v",
                        "h"
                    ]
                },
                "boxmean": {
                    "dflt": false,
                    "valType": "enumerated",
                    "description": "If *true*, the mean of the box(es)' underlying distribution is drawn as a dashed line inside the box(es). If *sd* the standard deviation is also drawn.",
                    "role": "style",
                    "values": [
                        true,
                        "sd",
                        false
                    ]
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "pointpos": {
                    "valType": "number",
                    "description": "Sets the position of the sample points in relation to the box(es). If *0*, the sample points are places over the center of the box(es). Positive (negative) values correspond to positions to the right (left) for vertical boxes and above (below) for horizontal boxes",
                    "max": 2,
                    "role": "style",
                    "min": -2
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "boxpoints": {
                    "dflt": "outliers",
                    "valType": "enumerated",
                    "description": "If *outliers*, only the sample points lying outside the whiskers are shown If *suspectedoutliers*, the outlier points are shown and points either less than 4*Q1-3*Q3 or greater than 4*Q3-3*Q1 are highlighted (see `outliercolor`) If *all*, all sample points are shown If *false*, only the box(es) are shown with no sample points",
                    "role": "style",
                    "values": [
                        "all",
                        "outliers",
                        "suspectedoutliers",
                        false
                    ]
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "line": {
                    "color": {
                        "valType": "color",
                        "description": "Sets the color of line bounding the box(es).",
                        "role": "style"
                    },
                    "role": "object",
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of line bounding the box(es).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "marker": {
                    "outliercolor": {
                        "valType": "color",
                        "description": "Sets the color of the outlier sample points.",
                        "role": "style",
                        "dflt": "rgba(0, 0, 0, 0)"
                    },
                    "symbol": {
                        "dflt": "circle",
                        "valType": "enumerated",
                        "arrayOk": false,
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "role": "style",
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ]
                    },
                    "line": {
                        "outlierwidth": {
                            "valType": "number",
                            "description": "Sets the border line width (in px) of the outlier sample points.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "color": {
                            "dflt": "#444",
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": false
                        },
                        "role": "object",
                        "outliercolor": {
                            "valType": "color",
                            "description": "Sets the border line color of the outlier sample points. Defaults to marker.color",
                            "role": "style"
                        },
                        "width": {
                            "dflt": 0,
                            "min": 0,
                            "valType": "number",
                            "arrayOk": false,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style"
                        }
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": false
                    },
                    "role": "object",
                    "opacity": {
                        "dflt": 1,
                        "max": 1,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": false,
                        "description": "Sets the marker opacity.",
                        "role": "style"
                    },
                    "size": {
                        "dflt": 6,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": false,
                        "description": "Sets the marker size (in px).",
                        "role": "style"
                    }
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x sample data or coordinates. See overview for more info.",
                    "role": "data"
                },
                "y0": {
                    "valType": "any",
                    "description": "Sets the y coordinate of the box. See overview for more info.",
                    "role": "info"
                },
                "fillcolor": {
                    "valType": "color",
                    "description": "Sets the fill color.",
                    "role": "style"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "x0": {
                    "valType": "any",
                    "description": "Sets the x coordinate of the box. See overview for more info.",
                    "role": "info"
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "jitter": {
                    "valType": "number",
                    "description": "Sets the amount of jitter in the sample points drawn. If *0*, the sample points align along the distribution axis. If *1*, the sample points are drawn in a random jitter of width equal to the width of the box(es).",
                    "max": 1,
                    "role": "style",
                    "min": 0
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "type": "box",
                "whiskerwidth": {
                    "dflt": 0.5,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the width of the whiskers relative to the box' width. For example, with 1, the whiskers are as wide as the box(es).",
                    "role": "style"
                },
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y sample data or coordinates. See overview for more info.",
                    "role": "data"
                }
            },
            "description": "In vertical (horizontal) box plots, statistics are computed using `y` (`x`) values. By supplying an `x` (`y`) array, one box per distinct x (y) value is drawn If no `x` (`y`) {array} is provided, a single box is drawn. That box position is then positioned with with `name` or with `x0` (`y0`) if provided. Each box spans from quartile 1 (Q1) to quartile 3 (Q3). The second quartile (Q2) is marked by a line inside the box. By default, the whiskers correspond to the box' edges +/- 1.5 times the interquartile range (IQR = Q3-Q1), see *boxpoints* for other options.",
            "layoutAttributes": {
                "boxmode": {
                    "dflt": "overlay",
                    "valType": "enumerated",
                    "description": "Determines how boxes at the same location coordinate are displayed on the graph. If *group*, the boxes are plotted next to one another centered around the shared location. If *overlay*, the boxes are plotted over one another, you might need to set *opacity* to see them multiple boxes.",
                    "role": "info",
                    "values": [
                        "group",
                        "overlay"
                    ]
                },
                "boxgap": {
                    "dflt": 0.3,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the gap (in plot fraction) between boxes of adjacent location coordinates.",
                    "role": "style"
                },
                "boxgroupgap": {
                    "dflt": 0.3,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the gap (in plot fraction) between boxes of the same location coordinate.",
                    "role": "style"
                }
            }
        },
        "surface": {
            "attributes": {
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "zmax": {
                    "valType": "number",
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "opacity": {
                    "valType": "number",
                    "max": 1,
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "type": "surface",
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "scene": {
                    "valType": "sceneid",
                    "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.",
                    "role": "info",
                    "dflt": "scene"
                },
                "contours": {
                    "z": {
                        "highlightColor": {
                            "valType": "color",
                            "role": "style",
                            "dflt": "#000"
                        },
                        "show": {
                            "valType": "boolean",
                            "description": "Sets whether or not dynamic contours are shown along the z axis",
                            "role": "info",
                            "dflt": false
                        },
                        "usecolormap": {
                            "valType": "boolean",
                            "role": "info",
                            "dflt": false
                        },
                        "project": {
                            "z": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the z axis.",
                                "role": "info",
                                "dflt": false
                            },
                            "role": "object",
                            "x": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the x axis.",
                                "role": "info",
                                "dflt": false
                            },
                            "y": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the y axis.",
                                "role": "info",
                                "dflt": false
                            }
                        },
                        "highlightWidth": {
                            "valType": "number",
                            "max": 16,
                            "role": "style",
                            "min": 1,
                            "dflt": 2
                        },
                        "highlight": {
                            "valType": "boolean",
                            "role": "info",
                            "dflt": false
                        },
                        "color": {
                            "valType": "color",
                            "role": "style",
                            "dflt": "#000"
                        },
                        "role": "object",
                        "width": {
                            "valType": "number",
                            "max": 16,
                            "role": "style",
                            "min": 1,
                            "dflt": 2
                        }
                    },
                    "role": "object",
                    "x": {
                        "highlightColor": {
                            "valType": "color",
                            "role": "style",
                            "dflt": "#000"
                        },
                        "show": {
                            "valType": "boolean",
                            "description": "Sets whether or not dynamic contours are shown along the x axis",
                            "role": "info",
                            "dflt": false
                        },
                        "usecolormap": {
                            "valType": "boolean",
                            "role": "info",
                            "dflt": false
                        },
                        "project": {
                            "z": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the z axis.",
                                "role": "info",
                                "dflt": false
                            },
                            "role": "object",
                            "x": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the x axis.",
                                "role": "info",
                                "dflt": false
                            },
                            "y": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the y axis.",
                                "role": "info",
                                "dflt": false
                            }
                        },
                        "highlightWidth": {
                            "valType": "number",
                            "max": 16,
                            "role": "style",
                            "min": 1,
                            "dflt": 2
                        },
                        "highlight": {
                            "valType": "boolean",
                            "role": "info",
                            "dflt": false
                        },
                        "color": {
                            "valType": "color",
                            "role": "style",
                            "dflt": "#000"
                        },
                        "role": "object",
                        "width": {
                            "valType": "number",
                            "max": 16,
                            "role": "style",
                            "min": 1,
                            "dflt": 2
                        }
                    },
                    "y": {
                        "highlightColor": {
                            "valType": "color",
                            "role": "style",
                            "dflt": "#000"
                        },
                        "show": {
                            "valType": "boolean",
                            "description": "Sets whether or not dynamic contours are shown along the y axis",
                            "role": "info",
                            "dflt": false
                        },
                        "usecolormap": {
                            "valType": "boolean",
                            "role": "info",
                            "dflt": false
                        },
                        "project": {
                            "z": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the z axis.",
                                "role": "info",
                                "dflt": false
                            },
                            "role": "object",
                            "x": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the x axis.",
                                "role": "info",
                                "dflt": false
                            },
                            "y": {
                                "valType": "boolean",
                                "description": "Sets whether or not the dynamic contours are projected along the y axis.",
                                "role": "info",
                                "dflt": false
                            }
                        },
                        "highlightWidth": {
                            "valType": "number",
                            "max": 16,
                            "role": "style",
                            "min": 1,
                            "dflt": 2
                        },
                        "highlight": {
                            "valType": "boolean",
                            "role": "info",
                            "dflt": false
                        },
                        "color": {
                            "valType": "color",
                            "role": "style",
                            "dflt": "#000"
                        },
                        "role": "object",
                        "width": {
                            "valType": "number",
                            "max": 16,
                            "role": "style",
                            "min": 1,
                            "dflt": 2
                        }
                    }
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the z coordinates.",
                    "role": "data"
                },
                "hidesurface": {
                    "valType": "boolean",
                    "role": "info",
                    "dflt": false
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "zauto": {
                    "valType": "boolean",
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "dflt": true
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "zmin": {
                    "valType": "number",
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "valType": "data_array",
                    "description": "Sets the text elements associated with each z value.",
                    "role": "data"
                },
                "autocolorscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "dflt": false
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                },
                "lighting": {
                    "ambient": {
                        "valType": "number",
                        "max": 1,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.8
                    },
                    "diffuse": {
                        "valType": "number",
                        "max": 1,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.8
                    },
                    "fresnel": {
                        "valType": "number",
                        "max": 5,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.2
                    },
                    "roughness": {
                        "valType": "number",
                        "max": 1,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.5
                    },
                    "role": "object",
                    "specular": {
                        "valType": "number",
                        "max": 2,
                        "role": "style",
                        "min": 0,
                        "dflt": 0.05
                    }
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                }
            },
            "description": "The data the describes the coordinates of the surface is set in `z`. Data in `z` should be a {2D array}. Coordinates in `x` and `y` can either be 1D {arrays} or {2D arrays} (e.g. to graph parametric surfaces). If not provided in `x` and `y`, the x and y coordinates are assumed to be linear starting at 0 with a unit step."
        },
        "scatter3d": {
            "attributes": {
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "textposition": {
                    "dflt": "top center",
                    "valType": "enumerated",
                    "arrayOk": true,
                    "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates.",
                    "role": "style",
                    "values": [
                        "top left",
                        "top center",
                        "top right",
                        "middle left",
                        "middle center",
                        "middle right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ]
                },
                "error_z": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "scatter3d",
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "error_x": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "marker": {
                    "sizemode": {
                        "dflt": "diameter",
                        "valType": "enumerated",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "values": [
                            "diameter",
                            "area"
                        ]
                    },
                    "line": {
                        "reversescale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "dflt": false
                        },
                        "autocolorscale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "dflt": true
                        },
                        "cauto": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "dflt": true
                        },
                        "cmin": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "colorscale": {
                            "valType": "colorscale",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style"
                        },
                        "cmax": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "width": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style",
                            "min": 0,
                            "arrayOk": false
                        }
                    },
                    "cauto": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "symbol": {
                        "dflt": "circle",
                        "valType": "enumerated",
                        "arrayOk": true,
                        "description": "Sets the marker symbol type.",
                        "role": "style",
                        "values": [
                            "circle",
                            "circle-open",
                            "square",
                            "square-open",
                            "diamond",
                            "diamond-open",
                            "cross",
                            "x"
                        ]
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "opacity": {
                        "valType": "number",
                        "max": 1,
                        "min": 0,
                        "arrayOk": false,
                        "description": "Sets the marker opacity. Note that the marker opacity for scatter3d traces must be a scalar value for performance reasons. To set a blending opacity value (i.e. which is not transparent), set *marker.color* to an rgba color and use its alpha channel.",
                        "role": "style"
                    },
                    "size": {
                        "dflt": 8,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "role": "style"
                    },
                    "showscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "dflt": false
                    },
                    "reversescale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "dflt": false
                    },
                    "autocolorscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizemin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "cmin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "sizeref": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "dflt": 1
                    },
                    "colorbar": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "tickangle": {
                            "valType": "angle",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "dflt": "auto"
                        },
                        "outlinewidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "title": {
                            "valType": "string",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "dflt": "Click to enter colorscale title"
                        },
                        "ticksuffix": {
                            "valType": "string",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tick0": {
                            "valType": "number",
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "dflt": 0
                        },
                        "len": {
                            "valType": "number",
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "tickvals": {
                            "valType": "data_array",
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "showticklabels": {
                            "valType": "boolean",
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "dflt": true
                        },
                        "nticks": {
                            "valType": "integer",
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "titleside": {
                            "dflt": "top",
                            "valType": "enumerated",
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ]
                        },
                        "thickness": {
                            "valType": "number",
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "min": 0,
                            "dflt": 30
                        },
                        "outlinecolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "titlefont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets this color bar's title font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "x": {
                            "dflt": 1.02,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "valType": "enumerated",
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "ticks": {
                            "dflt": "",
                            "valType": "enumerated",
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ]
                        },
                        "ticktextsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info"
                        },
                        "tickformat": {
                            "valType": "string",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickfont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the tick font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "dtick": {
                            "valType": "any",
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "dflt": 1
                        },
                        "xpad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "ticklen": {
                            "valType": "number",
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 5
                        },
                        "showexponent": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "ypad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "valType": "enumerated",
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ]
                        },
                        "role": "object",
                        "tickmode": {
                            "valType": "enumerated",
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ]
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "tickprefix": {
                            "valType": "string",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickcolor": {
                            "valType": "color",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "ticktext": {
                            "valType": "data_array",
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "tickvalssrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info"
                        },
                        "tickwidth": {
                            "valType": "number",
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "y": {
                            "dflt": 0.5,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "valType": "enumerated",
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        }
                    },
                    "colorscale": {
                        "valType": "colorscale",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.",
                        "role": "style"
                    },
                    "cmax": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "symbolsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info"
                    }
                },
                "projection": {
                    "z": {
                        "show": {
                            "valType": "boolean",
                            "description": "Sets whether or not projections are shown along the z axis.",
                            "role": "info",
                            "dflt": false
                        },
                        "role": "object",
                        "opacity": {
                            "dflt": 1,
                            "max": 1,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the projection color.",
                            "role": "style"
                        },
                        "scale": {
                            "dflt": 0.6666666666666666,
                            "max": 10,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the scale factor determining the size of the projection marker points.",
                            "role": "style"
                        }
                    },
                    "role": "object",
                    "x": {
                        "show": {
                            "valType": "boolean",
                            "description": "Sets whether or not projections are shown along the x axis.",
                            "role": "info",
                            "dflt": false
                        },
                        "role": "object",
                        "opacity": {
                            "dflt": 1,
                            "max": 1,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the projection color.",
                            "role": "style"
                        },
                        "scale": {
                            "dflt": 0.6666666666666666,
                            "max": 10,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the scale factor determining the size of the projection marker points.",
                            "role": "style"
                        }
                    },
                    "y": {
                        "show": {
                            "valType": "boolean",
                            "description": "Sets whether or not projections are shown along the y axis.",
                            "role": "info",
                            "dflt": false
                        },
                        "role": "object",
                        "opacity": {
                            "dflt": 1,
                            "max": 1,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the projection color.",
                            "role": "style"
                        },
                        "scale": {
                            "dflt": 0.6666666666666666,
                            "max": 10,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the scale factor determining the size of the projection marker points.",
                            "role": "style"
                        }
                    }
                },
                "scene": {
                    "valType": "sceneid",
                    "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.",
                    "role": "info",
                    "dflt": "scene"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the z coordinates.",
                    "role": "data"
                },
                "surfaceaxis": {
                    "dflt": -1,
                    "valType": "enumerated",
                    "description": "If *-1*, the scatter points are not fill with a surface If *0*, *1*, *2*, the scatter points are filled with a Delaunay surface about the x, y, z respectively.",
                    "role": "info",
                    "values": [
                        -1,
                        0,
                        1,
                        2
                    ]
                },
                "error_y": {
                    "visible": {
                        "valType": "boolean",
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info"
                    },
                    "copy_zstyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arrayminussrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info"
                    },
                    "valueminus": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "role": "object",
                    "array": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "traceref": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "valType": "number",
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style"
                        }
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style"
                    },
                    "tracerefminus": {
                        "valType": "integer",
                        "role": "info",
                        "min": 0,
                        "dflt": 0
                    },
                    "value": {
                        "valType": "number",
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "min": 0,
                        "dflt": 10
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ]
                    },
                    "symmetric": {
                        "valType": "boolean",
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info"
                    },
                    "arrayminus": {
                        "valType": "data_array",
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data"
                    },
                    "copy_ystyle": {
                        "valType": "boolean",
                        "role": "style"
                    },
                    "arraysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info"
                    }
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "textpositionsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info"
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "textfont": {
                    "family": {
                        "arrayOk": true,
                        "strict": true,
                        "noBlank": true,
                        "role": "style",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "description": "Sets the text font.",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1,
                        "arrayOk": true
                    },
                    "familysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  family .",
                        "role": "info"
                    }
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "line": {
                    "color": {
                        "valType": "color",
                        "description": "Sets the line color.",
                        "role": "style"
                    },
                    "role": "object",
                    "dash": {
                        "dflt": "solid",
                        "valType": "string",
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ]
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "dflt": "",
                    "valType": "string",
                    "description": "Sets text elements associated with each (x,y,z) triplet. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y,z) coordinates.",
                    "role": "info",
                    "arrayOk": true
                },
                "mode": {
                    "dflt": "lines+markers",
                    "valType": "flaglist",
                    "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.",
                    "role": "info",
                    "flags": [
                        "lines",
                        "markers",
                        "text"
                    ],
                    "extras": [
                        "none"
                    ]
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "surfacecolor": {
                    "valType": "color",
                    "description": "Sets the surface fill color.",
                    "role": "style"
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                }
            },
            "hrName": "scatter_3d",
            "description": "The data visualized as scatter point or lines in 3D dimension is set in `x`, `y`, `z`. Text (appearing either on the chart or on hover only) is via `text`. Bubble charts are achieved by setting `marker.size` and/or `marker.color` Projections are achieved via `projection`. Surface fills are achieved via `surfaceaxis`."
        },
        "scattergeo": {
            "attributes": {
                "line": {
                    "color": {
                        "valType": "color",
                        "description": "Sets the line color.",
                        "role": "style"
                    },
                    "role": "object",
                    "dash": {
                        "dflt": "solid",
                        "valType": "string",
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ]
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "geo": {
                    "valType": "geoid",
                    "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.",
                    "role": "info",
                    "dflt": "geo"
                },
                "locations": {
                    "valType": "data_array",
                    "description": "Sets the coordinates via location IDs or names. Coordinates correspond to the centroid of each location given. See `locationmode` for more info.",
                    "role": "data"
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "latsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  lat .",
                    "role": "info"
                },
                "textposition": {
                    "dflt": "middle center",
                    "valType": "enumerated",
                    "arrayOk": true,
                    "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates.",
                    "role": "style",
                    "values": [
                        "top left",
                        "top center",
                        "top right",
                        "middle left",
                        "middle center",
                        "middle right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ]
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "scattergeo",
                "lon": {
                    "valType": "data_array",
                    "description": "Sets the longitude coordinates (in degrees East).",
                    "role": "data"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "marker": {
                    "sizemode": {
                        "dflt": "diameter",
                        "valType": "enumerated",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "values": [
                            "diameter",
                            "area"
                        ]
                    },
                    "line": {
                        "reversescale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "dflt": false
                        },
                        "autocolorscale": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "dflt": true
                        },
                        "cauto": {
                            "valType": "boolean",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "dflt": true
                        },
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "cmin": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "colorscale": {
                            "valType": "colorscale",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style"
                        },
                        "cmax": {
                            "valType": "number",
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "dflt": null
                        },
                        "width": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style",
                            "min": 0,
                            "arrayOk": true
                        }
                    },
                    "cauto": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "symbol": {
                        "dflt": "circle",
                        "valType": "enumerated",
                        "arrayOk": true,
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "role": "style",
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ]
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "opacity": {
                        "valType": "number",
                        "max": 1,
                        "min": 0,
                        "arrayOk": true,
                        "description": "Sets the marker opacity.",
                        "role": "style"
                    },
                    "size": {
                        "dflt": 6,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "role": "style"
                    },
                    "showscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "dflt": false
                    },
                    "reversescale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "dflt": false
                    },
                    "autocolorscale": {
                        "valType": "boolean",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "dflt": true
                    },
                    "sizemin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "cmin": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "opacitysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info"
                    },
                    "sizeref": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "dflt": 1
                    },
                    "colorbar": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "tickangle": {
                            "valType": "angle",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "dflt": "auto"
                        },
                        "outlinewidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "title": {
                            "valType": "string",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "dflt": "Click to enter colorscale title"
                        },
                        "ticksuffix": {
                            "valType": "string",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tick0": {
                            "valType": "number",
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "dflt": 0
                        },
                        "len": {
                            "valType": "number",
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "tickvals": {
                            "valType": "data_array",
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "showticklabels": {
                            "valType": "boolean",
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "dflt": true
                        },
                        "nticks": {
                            "valType": "integer",
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "min": 0,
                            "dflt": 0
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "titleside": {
                            "dflt": "top",
                            "valType": "enumerated",
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ]
                        },
                        "thickness": {
                            "valType": "number",
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "min": 0,
                            "dflt": 30
                        },
                        "outlinecolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "titlefont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets this color bar's title font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "x": {
                            "dflt": 1.02,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "valType": "enumerated",
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "ticks": {
                            "dflt": "",
                            "valType": "enumerated",
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ]
                        },
                        "ticktextsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info"
                        },
                        "tickformat": {
                            "valType": "string",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickfont": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the tick font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "dtick": {
                            "valType": "any",
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "dflt": 1
                        },
                        "xpad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "ticklen": {
                            "valType": "number",
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 5
                        },
                        "showexponent": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        },
                        "ypad": {
                            "valType": "number",
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "min": 0,
                            "dflt": 10
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "valType": "enumerated",
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ]
                        },
                        "role": "object",
                        "tickmode": {
                            "valType": "enumerated",
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ]
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "tickprefix": {
                            "valType": "string",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "dflt": ""
                        },
                        "tickcolor": {
                            "valType": "color",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "dflt": "#444"
                        },
                        "ticktext": {
                            "valType": "data_array",
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data"
                        },
                        "tickvalssrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info"
                        },
                        "tickwidth": {
                            "valType": "number",
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "y": {
                            "dflt": 0.5,
                            "max": 3,
                            "min": -2,
                            "valType": "number",
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "role": "style"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "valType": "enumerated",
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "values": [
                                "fraction",
                                "pixels"
                            ]
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "valType": "enumerated",
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "valType": "enumerated",
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ]
                        }
                    },
                    "colorscale": {
                        "valType": "colorscale",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.",
                        "role": "style"
                    },
                    "cmax": {
                        "valType": "number",
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "dflt": null
                    },
                    "symbolsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info"
                    }
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "lat": {
                    "valType": "data_array",
                    "description": "Sets the latitude coordinates (in degrees North).",
                    "role": "data"
                },
                "locationmode": {
                    "dflt": "ISO-3",
                    "valType": "enumerated",
                    "description": "Determines the set of locations used to match entries in `locations` to regions on the map.",
                    "role": "info",
                    "values": [
                        "ISO-3",
                        "USA-states",
                        "country names"
                    ]
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "textpositionsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info"
                },
                "textfont": {
                    "family": {
                        "arrayOk": true,
                        "strict": true,
                        "noBlank": true,
                        "role": "style",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "description": "Sets the text font.",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1,
                        "arrayOk": true
                    },
                    "familysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  family .",
                        "role": "info"
                    }
                },
                "lonsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  lon .",
                    "role": "info"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "dflt": "",
                    "valType": "string",
                    "description": "Sets text elements associated with each (lon,lat) pair. or item in `locations`. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (lon,lat) or `locations` coordinates.",
                    "role": "info",
                    "arrayOk": true
                },
                "locationssrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  locations .",
                    "role": "info"
                },
                "mode": {
                    "dflt": "markers",
                    "valType": "flaglist",
                    "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.",
                    "role": "info",
                    "flags": [
                        "lines",
                        "markers",
                        "text"
                    ],
                    "extras": [
                        "none"
                    ]
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "lon",
                        "lat",
                        "location",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                }
            },
            "hrName": "scatter_geo",
            "description": "The data visualized as scatter point or lines on a geographic map is provided either by longitude/latitude pairs in `lon` and `lat` respectively or by geographic location IDs or names in `locations`."
        },
        "choropleth": {
            "attributes": {
                "geo": {
                    "valType": "geoid",
                    "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.",
                    "role": "info",
                    "dflt": "geo"
                },
                "zmax": {
                    "valType": "number",
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "type": "choropleth",
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "marker": {
                    "line": {
                        "widthsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info"
                        },
                        "colorsrc": {
                            "valType": "string",
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info"
                        },
                        "color": {
                            "valType": "color",
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "arrayOk": true
                        },
                        "role": "object",
                        "width": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "role": "style",
                            "min": 0,
                            "arrayOk": true
                        }
                    },
                    "role": "object"
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the color values.",
                    "role": "data"
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "locationmode": {
                    "dflt": "ISO-3",
                    "valType": "enumerated",
                    "description": "Determines the set of locations used to match entries in `locations` to regions on the map.",
                    "role": "info",
                    "values": [
                        "ISO-3",
                        "USA-states",
                        "country names"
                    ]
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "zauto": {
                    "valType": "boolean",
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "dflt": true
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "zmin": {
                    "valType": "number",
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "valType": "data_array",
                    "description": "Sets the text elements associated with each location.",
                    "role": "data"
                },
                "locationssrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  locations .",
                    "role": "info"
                },
                "autocolorscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "dflt": true
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "locations": {
                    "valType": "data_array",
                    "description": "Sets the coordinates via location IDs or names. See `locationmode` for more info.",
                    "role": "data"
                },
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "location",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                }
            },
            "description": "The data that describes the choropleth value-to-color mapping is set in `z`. The geographic locations corresponding to each value in `z` are set in `locations`."
        },
        "area": {
            "attributes": {
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "tsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  t .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "marker": {
                    "sizesrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info"
                    },
                    "symbol": {
                        "dflt": "circle",
                        "valType": "enumerated",
                        "arrayOk": true,
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "role": "style",
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ]
                    },
                    "opacitysrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info"
                    },
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "color",
                        "description": "Sets the marker color.",
                        "role": "style",
                        "arrayOk": true
                    },
                    "role": "object",
                    "opacity": {
                        "valType": "number",
                        "max": 1,
                        "min": 0,
                        "arrayOk": true,
                        "description": "Sets the marker opacity.",
                        "role": "style"
                    },
                    "size": {
                        "dflt": 6,
                        "min": 0,
                        "valType": "number",
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "role": "style"
                    },
                    "symbolsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info"
                    }
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "r": {
                    "valType": "data_array",
                    "description": "For polar chart only.Sets the radial coordinates.",
                    "role": "data"
                },
                "t": {
                    "valType": "data_array",
                    "description": "For polar chart only.Sets the angular coordinates.",
                    "role": "data"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "type": "area",
                "rsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  r .",
                    "role": "info"
                }
            }
        },
        "histogram2dcontour": {
            "attributes": {
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "nbinsy": {
                    "valType": "integer",
                    "description": "Sets the number of y axis bins.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "zmax": {
                    "valType": "number",
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "autobiny": {
                    "valType": "boolean",
                    "description": "Determines whether or not the y axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "dflt": true
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "ncontours": {
                    "valType": "integer",
                    "description": "Sets the number of contour levels.",
                    "role": "style",
                    "dflt": 0
                },
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "autocontour": {
                    "valType": "boolean",
                    "description": "Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.",
                    "role": "style",
                    "dflt": true
                },
                "marker": {
                    "colorsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info"
                    },
                    "color": {
                        "valType": "data_array",
                        "description": "Sets the aggregation data.",
                        "role": "data"
                    },
                    "role": "object"
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the sample data to be binned on the x axis.",
                    "role": "data"
                },
                "contours": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting contour level value.",
                        "role": "style",
                        "dflt": null
                    },
                    "size": {
                        "valType": "number",
                        "description": "Sets the step between each contour level.",
                        "role": "style",
                        "dflt": null
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end contour level value.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "showlines": {
                        "valType": "boolean",
                        "description": "Determines whether or not the contour lines are drawn. Has only an effect if `contours.coloring` is set to *fill*.",
                        "role": "style",
                        "dflt": true
                    },
                    "coloring": {
                        "dflt": "fill",
                        "valType": "enumerated",
                        "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient is coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace.",
                        "role": "style",
                        "values": [
                            "fill",
                            "heatmap",
                            "lines",
                            "none"
                        ]
                    }
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the aggregation data.",
                    "role": "data"
                },
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "histnorm": {
                    "dflt": "",
                    "valType": "enumerated",
                    "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).",
                    "role": "style",
                    "values": [
                        "",
                        "percent",
                        "probability",
                        "density",
                        "probability density"
                    ]
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "zauto": {
                    "valType": "boolean",
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "dflt": true
                },
                "ybins": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting value for the y axis bins.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "size": {
                        "valType": "any",
                        "description": "Sets the step in-between value each y axis bin.",
                        "role": "style",
                        "dflt": 1
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end value for the y axis bins.",
                        "role": "style",
                        "dflt": null
                    }
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "zmin": {
                    "valType": "number",
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "nbinsx": {
                    "valType": "integer",
                    "description": "Sets the number of x axis bins.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "xbins": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting value for the x axis bins.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "size": {
                        "valType": "any",
                        "description": "Sets the step in-between value each x axis bin.",
                        "role": "style",
                        "dflt": 1
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end value for the x axis bins.",
                        "role": "style",
                        "dflt": null
                    }
                },
                "type": "histogram2dcontour",
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "line": {
                    "color": {
                        "valType": "color",
                        "description": "Sets the color of the contour level. Has no if `contours.coloring` is set to *lines*.",
                        "role": "style"
                    },
                    "role": "object",
                    "smoothing": {
                        "dflt": 1,
                        "max": 1.3,
                        "min": 0,
                        "valType": "number",
                        "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing.",
                        "role": "style"
                    },
                    "dash": {
                        "dflt": "solid",
                        "valType": "string",
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ]
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "autobinx": {
                    "valType": "boolean",
                    "description": "Determines whether or not the x axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "dflt": true
                },
                "autocolorscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "dflt": false
                },
                "histfunc": {
                    "dflt": "count",
                    "valType": "enumerated",
                    "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.",
                    "role": "style",
                    "values": [
                        "count",
                        "sum",
                        "avg",
                        "min",
                        "max"
                    ]
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the sample data to be binned on the y axis.",
                    "role": "data"
                }
            },
            "hrName": "histogram_2d_contour",
            "description": "The sample data from which statistics are computed is set in `x` and `y` (where `x` and `y` represent marginal distributions, binning is set in `xbins` and `ybins` in this case) or `z` (where `z` represent the 2D distribution and binning set, binning is set by `x` and `y` in this case). The resulting distribution is visualized as a contour plot."
        },
        "contour": {
            "attributes": {
                "yaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "y"
                },
                "xsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info"
                },
                "zmax": {
                    "valType": "number",
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "name": {
                    "valType": "string",
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info"
                },
                "type": "contour",
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the opacity of the trace.",
                    "role": "style"
                },
                "ncontours": {
                    "valType": "integer",
                    "description": "Sets the number of contour levels.",
                    "role": "style",
                    "dflt": 0
                },
                "xaxis": {
                    "valType": "axisid",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "dflt": "x"
                },
                "ysrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info"
                },
                "uid": {
                    "valType": "string",
                    "role": "info",
                    "dflt": ""
                },
                "line": {
                    "color": {
                        "valType": "color",
                        "description": "Sets the color of the contour level. Has no if `contours.coloring` is set to *lines*.",
                        "role": "style"
                    },
                    "role": "object",
                    "smoothing": {
                        "dflt": 1,
                        "max": 1.3,
                        "min": 0,
                        "valType": "number",
                        "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing.",
                        "role": "style"
                    },
                    "dash": {
                        "dflt": "solid",
                        "valType": "string",
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ]
                    },
                    "width": {
                        "valType": "number",
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    }
                },
                "connectgaps": {
                    "valType": "boolean",
                    "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.",
                    "role": "info",
                    "dflt": false
                },
                "showscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "dflt": true
                },
                "x": {
                    "valType": "data_array",
                    "description": "Sets the x coordinates.",
                    "role": "data"
                },
                "y0": {
                    "valType": "any",
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "contours": {
                    "start": {
                        "valType": "number",
                        "description": "Sets the starting contour level value.",
                        "role": "style",
                        "dflt": null
                    },
                    "size": {
                        "valType": "number",
                        "description": "Sets the step between each contour level.",
                        "role": "style",
                        "dflt": null
                    },
                    "end": {
                        "valType": "number",
                        "description": "Sets the end contour level value.",
                        "role": "style",
                        "dflt": null
                    },
                    "role": "object",
                    "showlines": {
                        "valType": "boolean",
                        "description": "Determines whether or not the contour lines are drawn. Has only an effect if `contours.coloring` is set to *fill*.",
                        "role": "style",
                        "dflt": true
                    },
                    "coloring": {
                        "dflt": "fill",
                        "valType": "enumerated",
                        "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient is coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace.",
                        "role": "style",
                        "values": [
                            "fill",
                            "heatmap",
                            "lines",
                            "none"
                        ]
                    }
                },
                "stream": {
                    "role": "object",
                    "token": {
                        "noBlank": true,
                        "strict": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string"
                    },
                    "maxpoints": {
                        "valType": "number",
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "min": 0
                    }
                },
                "z": {
                    "valType": "data_array",
                    "description": "Sets the z data.",
                    "role": "data"
                },
                "transpose": {
                    "valType": "boolean",
                    "description": "Transposes the z data.",
                    "role": "info",
                    "dflt": false
                },
                "reversescale": {
                    "valType": "boolean",
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "dflt": false
                },
                "visible": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ]
                },
                "zauto": {
                    "valType": "boolean",
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "dflt": true
                },
                "x0": {
                    "valType": "any",
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "dflt": 0
                },
                "legendgroup": {
                    "valType": "string",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "dflt": ""
                },
                "zsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info"
                },
                "hoverinfo": {
                    "dflt": "all",
                    "valType": "flaglist",
                    "description": "Determines which trace information appear on hover.",
                    "role": "info",
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ]
                },
                "dx": {
                    "valType": "number",
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "showlegend": {
                    "valType": "boolean",
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "dflt": true
                },
                "text": {
                    "valType": "data_array",
                    "description": "Sets the text elements associated with each z value.",
                    "role": "data"
                },
                "autocontour": {
                    "valType": "boolean",
                    "description": "Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.",
                    "role": "style",
                    "dflt": true
                },
                "autocolorscale": {
                    "valType": "boolean",
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "dflt": false
                },
                "textsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info"
                },
                "dy": {
                    "valType": "number",
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "dflt": 1
                },
                "xtype": {
                    "valType": "enumerated",
                    "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).",
                    "role": "info",
                    "values": [
                        "array",
                        "scaled"
                    ]
                },
                "colorbar": {
                    "borderwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "outlinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "dflt": "Click to enter colorscale title"
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "len": {
                        "valType": "number",
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "bgcolor": {
                        "valType": "color",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "dflt": "rgba(0,0,0,0)"
                    },
                    "titleside": {
                        "dflt": "top",
                        "valType": "enumerated",
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ]
                    },
                    "thickness": {
                        "valType": "number",
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "min": 0,
                        "dflt": 30
                    },
                    "outlinecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this color bar's title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "x": {
                        "dflt": 1.02,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "valType": "enumerated",
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ]
                    },
                    "ticks": {
                        "dflt": "",
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "xpad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "ypad": {
                        "valType": "number",
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "min": 0,
                        "dflt": 10
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "role": "object",
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "bordercolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "y": {
                        "dflt": 0.5,
                        "max": 3,
                        "min": -2,
                        "valType": "number",
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "role": "style"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "valType": "enumerated",
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "values": [
                            "fraction",
                            "pixels"
                        ]
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "valType": "enumerated",
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    }
                },
                "zmin": {
                    "valType": "number",
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "dflt": null
                },
                "colorscale": {
                    "valType": "colorscale",
                    "description": "Sets the colorscale.",
                    "role": "style"
                },
                "y": {
                    "valType": "data_array",
                    "description": "Sets the y coordinates.",
                    "role": "data"
                },
                "ytype": {
                    "valType": "enumerated",
                    "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)",
                    "role": "info",
                    "values": [
                        "array",
                        "scaled"
                    ]
                }
            },
            "description": "The data from which contour lines are computed is set in `z`. Data in `z` must be a {2D array} of numbers. Say that `z` has N rows and M columns, then by default, these N rows correspond to N y coordinates (set in `y` or auto-generated) and the M columns correspond to M x coordinates (set in `x` or auto-generated). By setting `transpose` to *true*, the above behavior is flipped."
        }
    },
    "layout": {
        "layoutAttributes": {
            "orientation": {
                "valType": "angle",
                "description": "For polar plots only. Rotates the entire polar by the given angle.",
                "role": "info"
            },
            "hovermode": {
                "valType": "enumerated",
                "description": "Determines the mode of hover interactions.",
                "role": "info",
                "values": [
                    "x",
                    "y",
                    "closest",
                    false
                ]
            },
            "angularaxis": {
                "ticklen": {
                    "valType": "number",
                    "description": "Sets the length of the tick lines on this angular axis.",
                    "role": "style",
                    "min": 0
                },
                "visible": {
                    "valType": "boolean",
                    "description": "Determines whether or not this axis will be visible.",
                    "role": "info"
                },
                "tickcolor": {
                    "valType": "color",
                    "description": "Sets the color of the tick lines on this angular axis.",
                    "role": "style"
                },
                "range": {
                    "valType": "info_array",
                    "description": "Defines the start and end point of this angular axis.",
                    "items": [
                        {
                            "valType": "number",
                            "dflt": 0
                        },
                        {
                            "valType": "number",
                            "dflt": 360
                        }
                    ],
                    "role": "info"
                },
                "showline": {
                    "valType": "boolean",
                    "description": "Determines whether or not the line bounding this angular axis will be shown on the figure.",
                    "role": "style"
                },
                "ticksuffix": {
                    "valType": "string",
                    "description": "Sets the length of the tick lines on this angular axis.",
                    "role": "style"
                },
                "tickorientation": {
                    "valType": "enumerated",
                    "description": "Sets the orientation (from the paper perspective) of the angular axis tick labels.",
                    "role": "style",
                    "values": [
                        "horizontal",
                        "vertical"
                    ]
                },
                "role": "object",
                "showticklabels": {
                    "valType": "boolean",
                    "description": "Determines whether or not the angular axis ticks will feature tick labels.",
                    "role": "style"
                },
                "endpadding": {
                    "valType": "number",
                    "role": "style"
                },
                "domain": {
                    "valType": "info_array",
                    "description": "Polar chart subplots are not supported yet. This key has currently no effect.",
                    "items": [
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        },
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        }
                    ],
                    "role": "info",
                    "dflt": [
                        0,
                        1
                    ]
                }
            },
            "title": {
                "valType": "string",
                "description": "Sets the plot's title.",
                "role": "info",
                "dflt": "Click to enter Plot title"
            },
            "direction": {
                "valType": "enumerated",
                "description": "For polar plots only. Sets the direction corresponding to positive angles.",
                "role": "info",
                "values": [
                    "clockwise",
                    "counterclockwise"
                ]
            },
            "hidesources": {
                "valType": "boolean",
                "description": "Determines whether or not a text link citing the data source is placed at the bottom-right cored of the figure. Has only an effect only on graphs that have been generated via forked graphs from the plotly service (at https://plot.ly or on-premise).",
                "role": "info",
                "dflt": false
            },
            "plot_bgcolor": {
                "valType": "color",
                "description": "Sets the color of plotting area in-between x and y axes.",
                "role": "style",
                "dflt": "#fff"
            },
            "titlefont": {
                "family": {
                    "noBlank": true,
                    "strict": true,
                    "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                    "role": "style",
                    "valType": "string"
                },
                "description": "Sets the title font.",
                "color": {
                    "valType": "color",
                    "role": "style"
                },
                "role": "object",
                "size": {
                    "valType": "number",
                    "role": "style",
                    "min": 1
                }
            },
            "width": {
                "valType": "number",
                "description": "Sets the plot's width (in px).",
                "role": "info",
                "min": 10,
                "dflt": 700
            },
            "xaxis": {
                "zerolinewidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the zero line.",
                    "role": "style",
                    "dflt": 1
                },
                "zeroline": {
                    "valType": "boolean",
                    "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                    "role": "style"
                },
                "tickmode": {
                    "valType": "enumerated",
                    "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                    "role": "info",
                    "values": [
                        "auto",
                        "linear",
                        "array"
                    ]
                },
                "tickfont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets the tick font.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "role": "object",
                "overlaying": {
                    "valType": "enumerated",
                    "description": "If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.",
                    "role": "info",
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ]
                },
                "ticktext": {
                    "valType": "data_array",
                    "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data"
                },
                "position": {
                    "dflt": 0,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.",
                    "role": "style"
                },
                "fixedrange": {
                    "valType": "boolean",
                    "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                    "role": "info",
                    "dflt": false
                },
                "side": {
                    "valType": "enumerated",
                    "description": "Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.",
                    "role": "info",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                },
                "rangemode": {
                    "dflt": "normal",
                    "valType": "enumerated",
                    "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                    "role": "style",
                    "values": [
                        "normal",
                        "tozero",
                        "nonnegative"
                    ]
                },
                "tickformat": {
                    "valType": "string",
                    "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "dflt": ""
                },
                "showgrid": {
                    "valType": "boolean",
                    "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                    "role": "style"
                },
                "tickangle": {
                    "valType": "angle",
                    "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                    "role": "style",
                    "dflt": "auto"
                },
                "showexponent": {
                    "dflt": "all",
                    "valType": "enumerated",
                    "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                    "role": "style",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ]
                },
                "showticksuffix": {
                    "dflt": "all",
                    "valType": "enumerated",
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "role": "style",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ]
                },
                "anchor": {
                    "valType": "enumerated",
                    "description": "If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis' position is determined by `position`.",
                    "role": "info",
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ]
                },
                "linewidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the axis line.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "mirror": {
                    "dflt": false,
                    "valType": "enumerated",
                    "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                    "role": "style",
                    "values": [
                        true,
                        "ticks",
                        false,
                        "all",
                        "allticks"
                    ]
                },
                "tick0": {
                    "valType": "number",
                    "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                    "role": "style",
                    "dflt": 0
                },
                "_deprecated": {
                    "autotick": {
                        "valType": "boolean",
                        "description": "Obsolete. Set `tickmode` to *auto* for old `autotick` *true* behavior. Set `tickmode` to *linear* for `autotick` *false*.",
                        "role": "info"
                    }
                },
                "tickvalssrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  tickvals .",
                    "role": "info"
                },
                "dtick": {
                    "valType": "any",
                    "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                    "role": "style",
                    "dflt": 1
                },
                "gridwidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the grid lines.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "showtickprefix": {
                    "dflt": "all",
                    "valType": "enumerated",
                    "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                    "role": "style",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ]
                },
                "title": {
                    "valType": "string",
                    "description": "Sets the title of this axis.",
                    "role": "info"
                },
                "hoverformat": {
                    "valType": "string",
                    "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "dflt": ""
                },
                "range": {
                    "valType": "info_array",
                    "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                    "items": [
                        {
                            "valType": "number"
                        },
                        {
                            "valType": "number"
                        }
                    ],
                    "role": "info"
                },
                "autorange": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                    "role": "style",
                    "values": [
                        true,
                        false,
                        "reversed"
                    ]
                },
                "tickvals": {
                    "valType": "data_array",
                    "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data"
                },
                "showticklabels": {
                    "valType": "boolean",
                    "description": "Determines whether or not the tick labels are drawn.",
                    "role": "style",
                    "dflt": true
                },
                "nticks": {
                    "valType": "integer",
                    "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "ticklen": {
                    "valType": "number",
                    "description": "Sets the tick length (in px).",
                    "role": "style",
                    "min": 0,
                    "dflt": 5
                },
                "titlefont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets this axis' title font.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "ticks": {
                    "valType": "enumerated",
                    "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                    "role": "style",
                    "values": [
                        "outside",
                        "inside",
                        ""
                    ]
                },
                "ticksuffix": {
                    "valType": "string",
                    "description": "Sets a tick label suffix.",
                    "role": "style",
                    "dflt": ""
                },
                "gridcolor": {
                    "valType": "color",
                    "description": "Sets the color of the grid lines.",
                    "role": "style",
                    "dflt": "#eee"
                },
                "zerolinecolor": {
                    "valType": "color",
                    "description": "Sets the line color of the zero line.",
                    "role": "style",
                    "dflt": "#444"
                },
                "domain": {
                    "valType": "info_array",
                    "description": "Sets the domain of this axis (in plot fraction).",
                    "items": [
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        },
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        }
                    ],
                    "role": "info",
                    "dflt": [
                        0,
                        1
                    ]
                },
                "_isSubplotObj": true,
                "tickprefix": {
                    "valType": "string",
                    "description": "Sets a tick label prefix.",
                    "role": "style",
                    "dflt": ""
                },
                "exponentformat": {
                    "dflt": "B",
                    "valType": "enumerated",
                    "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                    "role": "style",
                    "values": [
                        "none",
                        "e",
                        "E",
                        "power",
                        "SI",
                        "B"
                    ]
                },
                "type": {
                    "dflt": "-",
                    "valType": "enumerated",
                    "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                    "role": "info",
                    "values": [
                        "-",
                        "linear",
                        "log",
                        "date",
                        "category"
                    ]
                },
                "ticktextsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  ticktext .",
                    "role": "info"
                },
                "showline": {
                    "valType": "boolean",
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "role": "style",
                    "dflt": false
                },
                "linecolor": {
                    "valType": "color",
                    "description": "Sets the axis line color.",
                    "role": "style",
                    "dflt": "#444"
                },
                "tickcolor": {
                    "valType": "color",
                    "description": "Sets the tick color.",
                    "role": "style",
                    "dflt": "#444"
                },
                "tickwidth": {
                    "valType": "number",
                    "description": "Sets the tick width (in px).",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                }
            },
            "yaxis": {
                "zerolinewidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the zero line.",
                    "role": "style",
                    "dflt": 1
                },
                "zeroline": {
                    "valType": "boolean",
                    "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                    "role": "style"
                },
                "tickmode": {
                    "valType": "enumerated",
                    "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                    "role": "info",
                    "values": [
                        "auto",
                        "linear",
                        "array"
                    ]
                },
                "tickfont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets the tick font.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "role": "object",
                "overlaying": {
                    "valType": "enumerated",
                    "description": "If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.",
                    "role": "info",
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ]
                },
                "ticktext": {
                    "valType": "data_array",
                    "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data"
                },
                "position": {
                    "dflt": 0,
                    "max": 1,
                    "min": 0,
                    "valType": "number",
                    "description": "Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.",
                    "role": "style"
                },
                "fixedrange": {
                    "valType": "boolean",
                    "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                    "role": "info",
                    "dflt": false
                },
                "side": {
                    "valType": "enumerated",
                    "description": "Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.",
                    "role": "info",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                },
                "rangemode": {
                    "dflt": "normal",
                    "valType": "enumerated",
                    "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                    "role": "style",
                    "values": [
                        "normal",
                        "tozero",
                        "nonnegative"
                    ]
                },
                "tickformat": {
                    "valType": "string",
                    "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "dflt": ""
                },
                "showgrid": {
                    "valType": "boolean",
                    "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                    "role": "style"
                },
                "tickangle": {
                    "valType": "angle",
                    "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                    "role": "style",
                    "dflt": "auto"
                },
                "showexponent": {
                    "dflt": "all",
                    "valType": "enumerated",
                    "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                    "role": "style",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ]
                },
                "showticksuffix": {
                    "dflt": "all",
                    "valType": "enumerated",
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "role": "style",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ]
                },
                "anchor": {
                    "valType": "enumerated",
                    "description": "If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis' position is determined by `position`.",
                    "role": "info",
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ]
                },
                "linewidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the axis line.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "mirror": {
                    "dflt": false,
                    "valType": "enumerated",
                    "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                    "role": "style",
                    "values": [
                        true,
                        "ticks",
                        false,
                        "all",
                        "allticks"
                    ]
                },
                "tick0": {
                    "valType": "number",
                    "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                    "role": "style",
                    "dflt": 0
                },
                "_deprecated": {
                    "autotick": {
                        "valType": "boolean",
                        "description": "Obsolete. Set `tickmode` to *auto* for old `autotick` *true* behavior. Set `tickmode` to *linear* for `autotick` *false*.",
                        "role": "info"
                    }
                },
                "tickvalssrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  tickvals .",
                    "role": "info"
                },
                "dtick": {
                    "valType": "any",
                    "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                    "role": "style",
                    "dflt": 1
                },
                "gridwidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the grid lines.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "showtickprefix": {
                    "dflt": "all",
                    "valType": "enumerated",
                    "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                    "role": "style",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ]
                },
                "title": {
                    "valType": "string",
                    "description": "Sets the title of this axis.",
                    "role": "info"
                },
                "hoverformat": {
                    "valType": "string",
                    "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "dflt": ""
                },
                "range": {
                    "valType": "info_array",
                    "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                    "items": [
                        {
                            "valType": "number"
                        },
                        {
                            "valType": "number"
                        }
                    ],
                    "role": "info"
                },
                "autorange": {
                    "dflt": true,
                    "valType": "enumerated",
                    "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                    "role": "style",
                    "values": [
                        true,
                        false,
                        "reversed"
                    ]
                },
                "tickvals": {
                    "valType": "data_array",
                    "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data"
                },
                "showticklabels": {
                    "valType": "boolean",
                    "description": "Determines whether or not the tick labels are drawn.",
                    "role": "style",
                    "dflt": true
                },
                "nticks": {
                    "valType": "integer",
                    "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "ticklen": {
                    "valType": "number",
                    "description": "Sets the tick length (in px).",
                    "role": "style",
                    "min": 0,
                    "dflt": 5
                },
                "titlefont": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets this axis' title font.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "ticks": {
                    "valType": "enumerated",
                    "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                    "role": "style",
                    "values": [
                        "outside",
                        "inside",
                        ""
                    ]
                },
                "ticksuffix": {
                    "valType": "string",
                    "description": "Sets a tick label suffix.",
                    "role": "style",
                    "dflt": ""
                },
                "gridcolor": {
                    "valType": "color",
                    "description": "Sets the color of the grid lines.",
                    "role": "style",
                    "dflt": "#eee"
                },
                "zerolinecolor": {
                    "valType": "color",
                    "description": "Sets the line color of the zero line.",
                    "role": "style",
                    "dflt": "#444"
                },
                "domain": {
                    "valType": "info_array",
                    "description": "Sets the domain of this axis (in plot fraction).",
                    "items": [
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        },
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        }
                    ],
                    "role": "info",
                    "dflt": [
                        0,
                        1
                    ]
                },
                "_isSubplotObj": true,
                "tickprefix": {
                    "valType": "string",
                    "description": "Sets a tick label prefix.",
                    "role": "style",
                    "dflt": ""
                },
                "exponentformat": {
                    "dflt": "B",
                    "valType": "enumerated",
                    "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                    "role": "style",
                    "values": [
                        "none",
                        "e",
                        "E",
                        "power",
                        "SI",
                        "B"
                    ]
                },
                "type": {
                    "dflt": "-",
                    "valType": "enumerated",
                    "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                    "role": "info",
                    "values": [
                        "-",
                        "linear",
                        "log",
                        "date",
                        "category"
                    ]
                },
                "ticktextsrc": {
                    "valType": "string",
                    "description": "Sets the source reference on plot.ly for  ticktext .",
                    "role": "info"
                },
                "showline": {
                    "valType": "boolean",
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "role": "style",
                    "dflt": false
                },
                "linecolor": {
                    "valType": "color",
                    "description": "Sets the axis line color.",
                    "role": "style",
                    "dflt": "#444"
                },
                "tickcolor": {
                    "valType": "color",
                    "description": "Sets the tick color.",
                    "role": "style",
                    "dflt": "#444"
                },
                "tickwidth": {
                    "valType": "number",
                    "description": "Sets the tick width (in px).",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                }
            },
            "shapes": {
                "items": {
                    "shape": {
                        "xref": {
                            "valType": "enumerated",
                            "description": "Sets the shape's x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where *0* (*1*) corresponds to the left (right) side.",
                            "role": "info",
                            "values": [
                                "paper",
                                "/^x([2-9]|[1-9][0-9]+)?$/"
                            ]
                        },
                        "line": {
                            "color": {
                                "valType": "color",
                                "description": "Sets the line color.",
                                "role": "style"
                            },
                            "role": "object",
                            "dash": {
                                "dflt": "solid",
                                "valType": "string",
                                "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                                "role": "style",
                                "values": [
                                    "solid",
                                    "dot",
                                    "dash",
                                    "longdash",
                                    "dashdot",
                                    "longdashdot"
                                ]
                            },
                            "width": {
                                "valType": "number",
                                "description": "Sets the line width (in px).",
                                "role": "style",
                                "min": 0,
                                "dflt": 2
                            }
                        },
                        "x0": {
                            "valType": "any",
                            "description": "Sets the shape's starting x position. See `type` for more info.",
                            "role": "info"
                        },
                        "path": {
                            "valType": "string",
                            "description": "For `type` *path* - a valid SVG path but with the pixel values replaced by data values. There are a few restrictions / quirks only absolute instructions, not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and ry are relative. In the future we could consider supporting relative commands, but we would have to decide on how to handle date and log axes. Note that even as is, Q and C Bezier paths that are smooth on linear axes may not be smooth on log, and vice versa. no chained \"polybezier\" commands - specify the segment type for each one. On category axes, values are numbers scaled to the serial numbers of categories because using the categories themselves there would be no way to describe fractional positions On data axes: because space and T are both normal components of path strings, we can't use either to separate date from time parts. Therefore we'll use underscore for this purpose: 2015-02-21_13:45:56.789",
                            "role": "info"
                        },
                        "role": "object",
                        "type": {
                            "valType": "enumerated",
                            "description": "Specifies the shape type to be drawn. If *line*, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`) If *circle*, a circle is drawn from ((`x0`+`x1`)/2, (`y0`+`y1`)/2)) with radius (|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|) If *rect*, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`) If *path*, draw a custom SVG path using `path`.",
                            "role": "info",
                            "values": [
                                "circle",
                                "rect",
                                "path",
                                "line"
                            ]
                        },
                        "y0": {
                            "valType": "any",
                            "description": "Sets the shape's starting y position. See `type` for more info.",
                            "role": "info"
                        },
                        "opacity": {
                            "dflt": 1,
                            "max": 1,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the opacity of the shape.",
                            "role": "info"
                        },
                        "yref": {
                            "valType": "enumerated",
                            "description": "Sets the annotation's y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where *0* (*1*) corresponds to the bottom (top).",
                            "role": "info",
                            "values": [
                                "paper",
                                "/^y([2-9]|[1-9][0-9]+)?$/"
                            ]
                        },
                        "x1": {
                            "valType": "any",
                            "description": "Sets the shape's end x position. See `type` for more info.",
                            "role": "info"
                        },
                        "fillcolor": {
                            "valType": "color",
                            "description": "Sets the color filling the shape's interior.",
                            "role": "info",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "y1": {
                            "valType": "any",
                            "description": "Sets the shape's end y position. See `type` for more info.",
                            "role": "info"
                        }
                    }
                },
                "role": "object"
            },
            "separators": {
                "valType": "string",
                "description": "Sets the decimal and thousand separators. For example, *. * puts a '.' before decimals and a space between thousands.",
                "role": "style",
                "dflt": ".,"
            },
            "scene": {
                "xaxis": {
                    "zerolinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the zero line.",
                        "role": "style",
                        "dflt": 1
                    },
                    "gridwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the grid lines.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "showbackground": {
                        "valType": "boolean",
                        "description": "Sets whether or not this axis' wall has a background color.",
                        "role": "info",
                        "dflt": false
                    },
                    "linewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "fixedrange": {
                        "valType": "boolean",
                        "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                        "role": "info",
                        "dflt": false
                    },
                    "rangemode": {
                        "dflt": "normal",
                        "valType": "enumerated",
                        "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                        "role": "style",
                        "values": [
                            "normal",
                            "tozero",
                            "nonnegative"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "showgrid": {
                        "valType": "boolean",
                        "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                        "role": "style"
                    },
                    "showline": {
                        "valType": "boolean",
                        "description": "Determines whether or not a line bounding this axis is drawn.",
                        "role": "style",
                        "dflt": false
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "role": "object",
                    "mirror": {
                        "dflt": false,
                        "valType": "enumerated",
                        "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                        "role": "style",
                        "values": [
                            true,
                            "ticks",
                            false,
                            "all",
                            "allticks"
                        ]
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "zerolinecolor": {
                        "valType": "color",
                        "description": "Sets the line color of the zero line.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showspikes": {
                        "valType": "boolean",
                        "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover.",
                        "role": "info",
                        "dflt": true
                    },
                    "showaxeslabels": {
                        "valType": "boolean",
                        "description": "Sets whether or not this axis is labeled",
                        "role": "info",
                        "dflt": true
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of this axis.",
                        "role": "info"
                    },
                    "hoverformat": {
                        "valType": "string",
                        "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "autorange": {
                        "dflt": true,
                        "valType": "enumerated",
                        "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                        "role": "style",
                        "values": [
                            true,
                            false,
                            "reversed"
                        ]
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "backgroundcolor": {
                        "valType": "color",
                        "description": "Sets the background color of this axis' wall.",
                        "role": "style",
                        "dflt": "rgba(204, 204, 204, 0.5)"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this axis' title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "ticks": {
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "gridcolor": {
                        "valType": "color",
                        "description": "Sets the color of the grid lines.",
                        "role": "style",
                        "dflt": "rgb(204, 204, 204)"
                    },
                    "spikesides": {
                        "valType": "boolean",
                        "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover.",
                        "role": "info",
                        "dflt": true
                    },
                    "range": {
                        "valType": "info_array",
                        "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "role": "info"
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "type": {
                        "dflt": "-",
                        "valType": "enumerated",
                        "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                        "role": "info",
                        "values": [
                            "-",
                            "linear",
                            "log",
                            "date",
                            "category"
                        ]
                    },
                    "zeroline": {
                        "valType": "boolean",
                        "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                        "role": "style"
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "linecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "spikethickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the spikes.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "spikecolor": {
                        "valType": "color",
                        "description": "Sets the color of the spikes.",
                        "role": "style",
                        "dflt": "rgb(0,0,0)"
                    }
                },
                "yaxis": {
                    "zerolinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the zero line.",
                        "role": "style",
                        "dflt": 1
                    },
                    "gridwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the grid lines.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "showbackground": {
                        "valType": "boolean",
                        "description": "Sets whether or not this axis' wall has a background color.",
                        "role": "info",
                        "dflt": false
                    },
                    "linewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "fixedrange": {
                        "valType": "boolean",
                        "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                        "role": "info",
                        "dflt": false
                    },
                    "rangemode": {
                        "dflt": "normal",
                        "valType": "enumerated",
                        "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                        "role": "style",
                        "values": [
                            "normal",
                            "tozero",
                            "nonnegative"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "showgrid": {
                        "valType": "boolean",
                        "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                        "role": "style"
                    },
                    "showline": {
                        "valType": "boolean",
                        "description": "Determines whether or not a line bounding this axis is drawn.",
                        "role": "style",
                        "dflt": false
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "role": "object",
                    "mirror": {
                        "dflt": false,
                        "valType": "enumerated",
                        "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                        "role": "style",
                        "values": [
                            true,
                            "ticks",
                            false,
                            "all",
                            "allticks"
                        ]
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "zerolinecolor": {
                        "valType": "color",
                        "description": "Sets the line color of the zero line.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showspikes": {
                        "valType": "boolean",
                        "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover.",
                        "role": "info",
                        "dflt": true
                    },
                    "showaxeslabels": {
                        "valType": "boolean",
                        "description": "Sets whether or not this axis is labeled",
                        "role": "info",
                        "dflt": true
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of this axis.",
                        "role": "info"
                    },
                    "hoverformat": {
                        "valType": "string",
                        "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "autorange": {
                        "dflt": true,
                        "valType": "enumerated",
                        "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                        "role": "style",
                        "values": [
                            true,
                            false,
                            "reversed"
                        ]
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "backgroundcolor": {
                        "valType": "color",
                        "description": "Sets the background color of this axis' wall.",
                        "role": "style",
                        "dflt": "rgba(204, 204, 204, 0.5)"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this axis' title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "ticks": {
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "gridcolor": {
                        "valType": "color",
                        "description": "Sets the color of the grid lines.",
                        "role": "style",
                        "dflt": "rgb(204, 204, 204)"
                    },
                    "spikesides": {
                        "valType": "boolean",
                        "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover.",
                        "role": "info",
                        "dflt": true
                    },
                    "range": {
                        "valType": "info_array",
                        "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "role": "info"
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "type": {
                        "dflt": "-",
                        "valType": "enumerated",
                        "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                        "role": "info",
                        "values": [
                            "-",
                            "linear",
                            "log",
                            "date",
                            "category"
                        ]
                    },
                    "zeroline": {
                        "valType": "boolean",
                        "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                        "role": "style"
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "linecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "spikethickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the spikes.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "spikecolor": {
                        "valType": "color",
                        "description": "Sets the color of the spikes.",
                        "role": "style",
                        "dflt": "rgb(0,0,0)"
                    }
                },
                "_deprecated": {
                    "cameraposition": {
                        "valType": "info_array",
                        "description": "Obsolete. Use `camera` instead.",
                        "role": "info"
                    }
                },
                "aspectratio": {
                    "z": {
                        "valType": "number",
                        "role": "info",
                        "min": 0
                    },
                    "role": "object",
                    "description": "Sets this scene's axis aspectratio.",
                    "x": {
                        "valType": "number",
                        "role": "info",
                        "min": 0
                    },
                    "y": {
                        "valType": "number",
                        "role": "info",
                        "min": 0
                    }
                },
                "aspectmode": {
                    "dflt": "auto",
                    "valType": "enumerated",
                    "description": "If *cube*, this scene's axes are drawn as a cube, regardless of the axes' ranges. If *data*, this scene's axes are drawn in proportion with the axes' ranges. If *manual*, this scene's axes are drawn in proportion with the input of *aspectratio* (the default behavior if *aspectratio* is provided). If *auto*, this scene's axes are drawn using the results of *data* except when one axis is more than four times the size of the two others, where in that case the results of *cube* are used.",
                    "role": "info",
                    "values": [
                        "auto",
                        "cube",
                        "data",
                        "manual"
                    ]
                },
                "role": "object",
                "bgcolor": {
                    "valType": "color",
                    "role": "style",
                    "dflt": "rgba(0,0,0,0)"
                },
                "camera": {
                    "eye": {
                        "z": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 1.25
                        },
                        "role": "object",
                        "description": "Sets the (x,y,z) components of the 'eye' camera vector. This vector determines the view point about the origin of this scene.",
                        "x": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 1.25
                        },
                        "y": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 1.25
                        }
                    },
                    "role": "object",
                    "up": {
                        "z": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 1
                        },
                        "role": "object",
                        "description": "Sets the (x,y,z) components of the 'up' camera vector. This vector determines the up direction of this scene with respect to the page. The default is *{x: 0, y: 0, z: 1}* which means that the z axis points up.",
                        "x": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 0
                        },
                        "y": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 0
                        }
                    },
                    "center": {
                        "z": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 0
                        },
                        "role": "object",
                        "description": "Sets the (x,y,z) components of the 'center' camera vector This vector determines the translation (x,y,z) space about the center of this scene. By default, there is no such translation.",
                        "x": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 0
                        },
                        "y": {
                            "valType": "number",
                            "role": "info",
                            "dflt": 0
                        }
                    }
                },
                "_isSubplotObj": true,
                "zaxis": {
                    "zerolinewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the zero line.",
                        "role": "style",
                        "dflt": 1
                    },
                    "gridwidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the grid lines.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "tickmode": {
                        "valType": "enumerated",
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ]
                    },
                    "showbackground": {
                        "valType": "boolean",
                        "description": "Sets whether or not this axis' wall has a background color.",
                        "role": "info",
                        "dflt": false
                    },
                    "linewidth": {
                        "valType": "number",
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "ticktext": {
                        "valType": "data_array",
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "fixedrange": {
                        "valType": "boolean",
                        "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                        "role": "info",
                        "dflt": false
                    },
                    "rangemode": {
                        "dflt": "normal",
                        "valType": "enumerated",
                        "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                        "role": "style",
                        "values": [
                            "normal",
                            "tozero",
                            "nonnegative"
                        ]
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "tickfont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets the tick font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "showgrid": {
                        "valType": "boolean",
                        "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                        "role": "style"
                    },
                    "showline": {
                        "valType": "boolean",
                        "description": "Determines whether or not a line bounding this axis is drawn.",
                        "role": "style",
                        "dflt": false
                    },
                    "showexponent": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "tickformat": {
                        "valType": "string",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "role": "object",
                    "mirror": {
                        "dflt": false,
                        "valType": "enumerated",
                        "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                        "role": "style",
                        "values": [
                            true,
                            "ticks",
                            false,
                            "all",
                            "allticks"
                        ]
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "dflt": 0
                    },
                    "zerolinecolor": {
                        "valType": "color",
                        "description": "Sets the line color of the zero line.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickvalssrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info"
                    },
                    "dtick": {
                        "valType": "any",
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "dflt": 1
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "valType": "enumerated",
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ]
                    },
                    "showspikes": {
                        "valType": "boolean",
                        "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover.",
                        "role": "info",
                        "dflt": true
                    },
                    "showaxeslabels": {
                        "valType": "boolean",
                        "description": "Sets whether or not this axis is labeled",
                        "role": "info",
                        "dflt": true
                    },
                    "title": {
                        "valType": "string",
                        "description": "Sets the title of this axis.",
                        "role": "info"
                    },
                    "hoverformat": {
                        "valType": "string",
                        "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "dflt": ""
                    },
                    "autorange": {
                        "dflt": true,
                        "valType": "enumerated",
                        "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                        "role": "style",
                        "values": [
                            true,
                            false,
                            "reversed"
                        ]
                    },
                    "tickvals": {
                        "valType": "data_array",
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data"
                    },
                    "showticklabels": {
                        "valType": "boolean",
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "dflt": true
                    },
                    "nticks": {
                        "valType": "integer",
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "min": 0,
                        "dflt": 0
                    },
                    "ticklen": {
                        "valType": "number",
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 5
                    },
                    "backgroundcolor": {
                        "valType": "color",
                        "description": "Sets the background color of this axis' wall.",
                        "role": "style",
                        "dflt": "rgba(204, 204, 204, 0.5)"
                    },
                    "titlefont": {
                        "family": {
                            "noBlank": true,
                            "strict": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string"
                        },
                        "description": "Sets this axis' title font.",
                        "color": {
                            "valType": "color",
                            "role": "style"
                        },
                        "role": "object",
                        "size": {
                            "valType": "number",
                            "role": "style",
                            "min": 1
                        }
                    },
                    "ticks": {
                        "valType": "enumerated",
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ]
                    },
                    "ticksuffix": {
                        "valType": "string",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "gridcolor": {
                        "valType": "color",
                        "description": "Sets the color of the grid lines.",
                        "role": "style",
                        "dflt": "rgb(204, 204, 204)"
                    },
                    "spikesides": {
                        "valType": "boolean",
                        "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover.",
                        "role": "info",
                        "dflt": true
                    },
                    "range": {
                        "valType": "info_array",
                        "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "role": "info"
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "valType": "enumerated",
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ]
                    },
                    "tickprefix": {
                        "valType": "string",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "dflt": ""
                    },
                    "type": {
                        "dflt": "-",
                        "valType": "enumerated",
                        "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                        "role": "info",
                        "values": [
                            "-",
                            "linear",
                            "log",
                            "date",
                            "category"
                        ]
                    },
                    "zeroline": {
                        "valType": "boolean",
                        "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                        "role": "style"
                    },
                    "ticktextsrc": {
                        "valType": "string",
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info"
                    },
                    "tickangle": {
                        "valType": "angle",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "dflt": "auto"
                    },
                    "linecolor": {
                        "valType": "color",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "tickcolor": {
                        "valType": "color",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "dflt": "#444"
                    },
                    "spikethickness": {
                        "valType": "number",
                        "description": "Sets the thickness (in px) of the spikes.",
                        "role": "style",
                        "min": 0,
                        "dflt": 2
                    },
                    "tickwidth": {
                        "valType": "number",
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "spikecolor": {
                        "valType": "color",
                        "description": "Sets the color of the spikes.",
                        "role": "style",
                        "dflt": "rgb(0,0,0)"
                    }
                },
                "domain": {
                    "role": "object",
                    "x": {
                        "valType": "info_array",
                        "description": "Sets the horizontal domain of this scene (in plot fraction).",
                        "items": [
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            },
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            }
                        ],
                        "role": "info",
                        "dflt": [
                            0,
                            1
                        ]
                    },
                    "y": {
                        "valType": "info_array",
                        "description": "Sets the vertical domain of this scene (in plot fraction).",
                        "items": [
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            },
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            }
                        ],
                        "role": "info",
                        "dflt": [
                            0,
                            1
                        ]
                    }
                }
            },
            "height": {
                "valType": "number",
                "description": "Sets the plot's height (in px).",
                "role": "info",
                "min": 10,
                "dflt": 450
            },
            "geo": {
                "riverwidth": {
                    "valType": "number",
                    "description": "Sets the stroke width (in px) of the rivers.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "oceancolor": {
                    "valType": "color",
                    "description": "Sets the ocean color",
                    "role": "style",
                    "dflt": "#3399FF"
                },
                "showland": {
                    "valType": "boolean",
                    "description": "Sets whether or not land masses are filled in color.",
                    "role": "info",
                    "dflt": false
                },
                "countrywidth": {
                    "valType": "number",
                    "description": "Sets line width (in px) of the country boundaries.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "showframe": {
                    "valType": "boolean",
                    "description": "Sets whether or not a frame is drawn around the map.",
                    "role": "info"
                },
                "_isSubplotObj": true,
                "framewidth": {
                    "valType": "number",
                    "description": "Sets the stroke width (in px) of the frame.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "showcountries": {
                    "valType": "boolean",
                    "description": "Sets whether or not country boundaries are drawn.",
                    "role": "info"
                },
                "rivercolor": {
                    "valType": "color",
                    "description": "Sets color of the rivers.",
                    "role": "style",
                    "dflt": "#3399FF"
                },
                "landcolor": {
                    "valType": "color",
                    "description": "Sets the land mass color.",
                    "role": "style",
                    "dflt": "#F0DC82"
                },
                "bgcolor": {
                    "valType": "color",
                    "description": "Set the background color of the map",
                    "role": "style",
                    "dflt": "#fff"
                },
                "resolution": {
                    "dflt": 110,
                    "coerceNumber": true,
                    "valType": "enumerated",
                    "description": "Sets the resolution of the base layers. The values have units of km/mm e.g. 110 corresponds to a scale ratio of 1:110,000,000.",
                    "role": "info",
                    "values": [
                        110,
                        50
                    ]
                },
                "projection": {
                    "rotation": {
                        "roll": {
                            "valType": "number",
                            "description": "Roll the map (in degrees) For example, a roll of *180* makes the map appear upside down.",
                            "role": "info"
                        },
                        "lon": {
                            "valType": "number",
                            "description": "Rotates the map along parallels (in degrees East).",
                            "role": "info"
                        },
                        "role": "object",
                        "lat": {
                            "valType": "number",
                            "description": "Rotates the map along meridians (in degrees North).",
                            "role": "info"
                        }
                    },
                    "role": "object",
                    "scale": {
                        "dflt": 1,
                        "max": 10,
                        "min": 0,
                        "valType": "number",
                        "description": "Zooms in or out on the map view.",
                        "role": "info"
                    },
                    "parallels": {
                        "valType": "info_array",
                        "description": "For conic projection types only. Sets the parallels (tangent, secant) where the cone intersects the sphere.",
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "role": "info"
                    },
                    "type": {
                        "valType": "enumerated",
                        "description": "Sets the projection type.",
                        "role": "info",
                        "values": [
                            "equirectangular",
                            "mercator",
                            "orthographic",
                            "natural earth",
                            "kavrayskiy7",
                            "miller",
                            "robinson",
                            "eckert4",
                            "azimuthal equal area",
                            "azimuthal equidistant",
                            "conic equal area",
                            "conic conformal",
                            "conic equidistant",
                            "gnomonic",
                            "stereographic",
                            "mollweide",
                            "hammer",
                            "transverse mercator",
                            "albers usa"
                        ]
                    }
                },
                "showlakes": {
                    "valType": "boolean",
                    "description": "Sets whether or not lakes are drawn.",
                    "role": "info",
                    "dflt": false
                },
                "lakecolor": {
                    "valType": "color",
                    "description": "Sets the color of the lakes.",
                    "role": "style",
                    "dflt": "#3399FF"
                },
                "domain": {
                    "role": "object",
                    "x": {
                        "valType": "info_array",
                        "description": "Sets the horizontal domain of this map (in plot fraction).",
                        "items": [
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            },
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            }
                        ],
                        "role": "info",
                        "dflt": [
                            0,
                            1
                        ]
                    },
                    "y": {
                        "valType": "info_array",
                        "description": "Sets the vertical domain of this map (in plot fraction).",
                        "items": [
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            },
                            {
                                "valType": "number",
                                "max": 1,
                                "min": 0
                            }
                        ],
                        "role": "info",
                        "dflt": [
                            0,
                            1
                        ]
                    }
                },
                "coastlinecolor": {
                    "valType": "color",
                    "description": "Sets the coastline color.",
                    "role": "style",
                    "dflt": "#444"
                },
                "subunitwidth": {
                    "valType": "number",
                    "description": "Sets the stroke width (in px) of the subunits boundaries.",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                },
                "lataxis": {
                    "gridwidth": {
                        "valType": "number",
                        "description": "Sets the graticule's stroke width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "range": {
                        "valType": "info_array",
                        "description": "Sets the range of this axis (in degrees).",
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "role": "info"
                    },
                    "showgrid": {
                        "valType": "boolean",
                        "description": "Sets whether or not graticule are shown on the map.",
                        "role": "info",
                        "dflt": false
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the graticule's starting tick longitude/latitude.",
                        "role": "info"
                    },
                    "role": "object",
                    "dtick": {
                        "valType": "number",
                        "description": "Sets the graticule's longitude/latitude tick step.",
                        "role": "info"
                    },
                    "gridcolor": {
                        "valType": "color",
                        "description": "Sets the graticule's stroke color.",
                        "role": "style",
                        "dflt": "#eee"
                    }
                },
                "scope": {
                    "dflt": "world",
                    "valType": "enumerated",
                    "description": "Set the scope of the map.",
                    "role": "info",
                    "values": [
                        "world",
                        "usa",
                        "europe",
                        "asia",
                        "africa",
                        "north america",
                        "south america"
                    ]
                },
                "framecolor": {
                    "valType": "color",
                    "description": "Sets the color the frame.",
                    "role": "style",
                    "dflt": "#444"
                },
                "subunitcolor": {
                    "valType": "color",
                    "description": "Sets the color of the subunits boundaries.",
                    "role": "style",
                    "dflt": "#444"
                },
                "role": "object",
                "lonaxis": {
                    "gridwidth": {
                        "valType": "number",
                        "description": "Sets the graticule's stroke width (in px).",
                        "role": "style",
                        "min": 0,
                        "dflt": 1
                    },
                    "range": {
                        "valType": "info_array",
                        "description": "Sets the range of this axis (in degrees).",
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "role": "info"
                    },
                    "showgrid": {
                        "valType": "boolean",
                        "description": "Sets whether or not graticule are shown on the map.",
                        "role": "info",
                        "dflt": false
                    },
                    "tick0": {
                        "valType": "number",
                        "description": "Sets the graticule's starting tick longitude/latitude.",
                        "role": "info"
                    },
                    "role": "object",
                    "dtick": {
                        "valType": "number",
                        "description": "Sets the graticule's longitude/latitude tick step.",
                        "role": "info"
                    },
                    "gridcolor": {
                        "valType": "color",
                        "description": "Sets the graticule's stroke color.",
                        "role": "style",
                        "dflt": "#eee"
                    }
                },
                "showocean": {
                    "valType": "boolean",
                    "description": "Sets whether or not oceans are filled in color.",
                    "role": "info",
                    "dflt": false
                },
                "showrivers": {
                    "valType": "boolean",
                    "description": "Sets whether or not rivers are drawn.",
                    "role": "info",
                    "dflt": false
                },
                "showcoastlines": {
                    "valType": "boolean",
                    "description": "Sets whether or not the coastlines are drawn.",
                    "role": "info"
                },
                "countrycolor": {
                    "valType": "color",
                    "description": "Sets line color of the country boundaries.",
                    "role": "style",
                    "dflt": "#444"
                },
                "showsubunits": {
                    "valType": "boolean",
                    "description": "Sets whether or not boundaries of subunits within countries (e.g. states, provinces) are drawn.",
                    "role": "info"
                },
                "coastlinewidth": {
                    "valType": "number",
                    "description": "Sets the coastline stroke width (in px).",
                    "role": "style",
                    "min": 0,
                    "dflt": 1
                }
            },
            "annotations": {
                "items": {
                    "annotation": {
                        "borderwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of the border enclosing the annotation `text`.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "arrowwidth": {
                            "valType": "number",
                            "description": "Sets the width (in px) of annotation arrow.",
                            "role": "style",
                            "min": 0.1
                        },
                        "font": {
                            "family": {
                                "noBlank": true,
                                "strict": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string"
                            },
                            "description": "Sets the annotation text font.",
                            "color": {
                                "valType": "color",
                                "role": "style"
                            },
                            "role": "object",
                            "size": {
                                "valType": "number",
                                "role": "style",
                                "min": 1
                            }
                        },
                        "textangle": {
                            "valType": "angle",
                            "description": "Sets the angle at which the `text` is drawn with respect to the horizontal.",
                            "role": "style",
                            "dflt": 0
                        },
                        "borderpad": {
                            "valType": "number",
                            "description": "Sets the padding (in px) between the `text` and the enclosing border.",
                            "role": "style",
                            "min": 0,
                            "dflt": 1
                        },
                        "opacity": {
                            "dflt": 1,
                            "max": 1,
                            "min": 0,
                            "valType": "number",
                            "description": "Sets the opacity of the annotation (text + arrow).",
                            "role": "style"
                        },
                        "bgcolor": {
                            "valType": "color",
                            "description": "Sets the background color of the annotation.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "ay": {
                            "valType": "number",
                            "description": "Sets the y component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from bottom to top (top to bottom)",
                            "role": "info",
                            "dflt": -30
                        },
                        "yref": {
                            "valType": "enumerated",
                            "description": "Sets the annotation's y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top).",
                            "role": "info",
                            "values": [
                                "paper",
                                "/^y([2-9]|[1-9][0-9]+)?$/"
                            ]
                        },
                        "x": {
                            "valType": "number",
                            "description": "Sets the annotation's x position. Note that dates and categories are converted to numbers.",
                            "role": "info"
                        },
                        "xanchor": {
                            "dflt": "auto",
                            "valType": "enumerated",
                            "description": "Sets the annotation's horizontal position anchor This anchor binds the `x` position to the *left*, *center* or *right* of the annotation. For example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the right-most portion of the annotation lines up with the right-most edge of the plotting area. If *auto*, the anchor is equivalent to *center* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.",
                            "role": "info",
                            "values": [
                                "auto",
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "arrowcolor": {
                            "valType": "color",
                            "description": "Sets the color of the annotation arrow.",
                            "role": "style"
                        },
                        "arrowhead": {
                            "dflt": 1,
                            "max": 8,
                            "min": 0,
                            "valType": "integer",
                            "description": "Sets the annotation arrow head style.",
                            "role": "style"
                        },
                        "bordercolor": {
                            "valType": "color",
                            "description": "Sets the color of the border enclosing the annotation `text`.",
                            "role": "style",
                            "dflt": "rgba(0,0,0,0)"
                        },
                        "xref": {
                            "valType": "enumerated",
                            "description": "Sets the annotation's x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side.",
                            "role": "info",
                            "values": [
                                "paper",
                                "/^x([2-9]|[1-9][0-9]+)?$/"
                            ]
                        },
                        "arrowsize": {
                            "valType": "number",
                            "description": "Sets the size (in px) of annotation arrow head.",
                            "role": "style",
                            "min": 0.3,
                            "dflt": 1
                        },
                        "showarrow": {
                            "valType": "boolean",
                            "description": "Determines whether or not the annotation is drawn with an arrow. If *true*, `text` is placed near the arrow's tail. If *false*, `text` lines up with the `x` and `y` provided.",
                            "role": "style",
                            "dflt": true
                        },
                        "role": "object",
                        "text": {
                            "valType": "string",
                            "description": "Sets the text associated with this annotation. Plotly uses a subset of HTML tags to do things like newline (<br>), bold (<b></b>), italics (<i></i>), hyperlinks (<a href='...'></a>). Tags <em>, <sup>, <sub> <span> are also supported.",
                            "role": "info"
                        },
                        "align": {
                            "dflt": "center",
                            "valType": "enumerated",
                            "description": "Sets the vertical alignment of the `text` with respect to the set `x` and `y` position. Has only an effect if `text` spans more two or more lines (i.e. `text` contains one or more <br> HTML tags).",
                            "role": "style",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ]
                        },
                        "_deprecated": {
                            "ref": {
                                "valType": "string",
                                "description": "Obsolete. Set `xref` and `yref` separately instead.",
                                "role": "info"
                            }
                        },
                        "ax": {
                            "valType": "number",
                            "description": "Sets the x component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from right to left (left to right)",
                            "role": "info",
                            "dflt": -10
                        },
                        "yanchor": {
                            "dflt": "auto",
                            "valType": "enumerated",
                            "description": "Sets the annotation's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation. For example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the top-most portion of the annotation lines up with the top-most edge of the plotting area. If *auto*, the anchor is equivalent to *middle* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.",
                            "role": "info",
                            "values": [
                                "auto",
                                "top",
                                "middle",
                                "bottom"
                            ]
                        },
                        "y": {
                            "valType": "number",
                            "description": "Sets the annotation's y position. Note that dates and categories are converted to numbers.",
                            "role": "info"
                        }
                    }
                },
                "role": "object"
            },
            "showlegend": {
                "valType": "boolean",
                "description": "Determines whether or not a legend is drawn.",
                "role": "info"
            },
            "radialaxis": {
                "orientation": {
                    "valType": "number",
                    "description": "Sets the orientation (an angle with respect to the origin) of the radial axis.",
                    "role": "style"
                },
                "visible": {
                    "valType": "boolean",
                    "description": "Determines whether or not this axis will be visible.",
                    "role": "info"
                },
                "range": {
                    "valType": "info_array",
                    "description": "Defines the start and end point of this radial axis.",
                    "items": [
                        {
                            "valType": "number"
                        },
                        {
                            "valType": "number"
                        }
                    ],
                    "role": "info"
                },
                "showline": {
                    "valType": "boolean",
                    "description": "Determines whether or not the line bounding this radial axis will be shown on the figure.",
                    "role": "style"
                },
                "role": "object",
                "showticklabels": {
                    "valType": "boolean",
                    "description": "Determines whether or not the radial axis ticks will feature tick labels.",
                    "role": "style"
                },
                "ticklen": {
                    "valType": "number",
                    "description": "Sets the length of the tick lines on this radial axis.",
                    "role": "style",
                    "min": 0
                },
                "tickcolor": {
                    "valType": "color",
                    "description": "Sets the color of the tick lines on this radial axis.",
                    "role": "style"
                },
                "tickorientation": {
                    "valType": "enumerated",
                    "description": "Sets the orientation (from the paper perspective) of the radial axis tick labels.",
                    "role": "style",
                    "values": [
                        "horizontal",
                        "vertical"
                    ]
                },
                "ticksuffix": {
                    "valType": "string",
                    "description": "Sets the length of the tick lines on this radial axis.",
                    "role": "style"
                },
                "endpadding": {
                    "valType": "number",
                    "role": "style"
                },
                "domain": {
                    "valType": "info_array",
                    "description": "Polar chart subplots are not supported yet. This key has currently no effect.",
                    "items": [
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        },
                        {
                            "valType": "number",
                            "max": 1,
                            "min": 0
                        }
                    ],
                    "role": "info",
                    "dflt": [
                        0,
                        1
                    ]
                }
            },
            "dragmode": {
                "valType": "enumerated",
                "description": "Determines the mode of drag interactions. *select* and *lasso* apply only to scatter traces with markers or text. *orbit* and *turntable* apply only to 3D scenes.",
                "role": "info",
                "values": [
                    "zoom",
                    "pan",
                    "select",
                    "lasso",
                    "orbit",
                    "turntable"
                ]
            },
            "autosize": {
                "valType": "enumerated",
                "description": "Determines whether or not the dimensions of the figure are computed as a function of the display size.",
                "role": "info",
                "values": [
                    true,
                    false,
                    "initial"
                ]
            },
            "legend": {
                "borderwidth": {
                    "valType": "number",
                    "description": "Sets the width (in px) of the border enclosing the legend.",
                    "role": "style",
                    "min": 0,
                    "dflt": 0
                },
                "tracegroupgap": {
                    "valType": "number",
                    "description": "Sets the amount of vertical space (in px) between legend groups.",
                    "role": "style",
                    "min": 0,
                    "dflt": 10
                },
                "font": {
                    "family": {
                        "noBlank": true,
                        "strict": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string"
                    },
                    "description": "Sets the font used to text the legend items.",
                    "color": {
                        "valType": "color",
                        "role": "style"
                    },
                    "role": "object",
                    "size": {
                        "valType": "number",
                        "role": "style",
                        "min": 1
                    }
                },
                "x": {
                    "dflt": 1.02,
                    "max": 3,
                    "min": -2,
                    "valType": "number",
                    "description": "Sets the x position (in normalized coordinates) of the legend.",
                    "role": "style"
                },
                "xanchor": {
                    "dflt": "left",
                    "valType": "enumerated",
                    "description": "Sets the legend's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the legend.",
                    "role": "info",
                    "values": [
                        "auto",
                        "left",
                        "center",
                        "right"
                    ]
                },
                "role": "object",
                "y": {
                    "dflt": 1,
                    "max": 3,
                    "min": -2,
                    "valType": "number",
                    "description": "Sets the y position (in normalized coordinates) of the legend.",
                    "role": "style"
                },
                "bordercolor": {
                    "valType": "color",
                    "description": "Sets the color of the border enclosing the legend.",
                    "role": "style",
                    "dflt": "#444"
                },
                "yanchor": {
                    "dflt": "auto",
                    "valType": "enumerated",
                    "description": "Sets the legend's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the legend.",
                    "role": "info",
                    "values": [
                        "auto",
                        "top",
                        "middle",
                        "bottom"
                    ]
                },
                "traceorder": {
                    "valType": "flaglist",
                    "description": "Determines the order at which the legend items are displayed. If *normal*, the items are displayed top-to-bottom in the same order as the input data. If *reversed*, the items are displayed in the opposite order as *normal*. If *grouped*, the items are displayed in groups (when a trace `legendgroup` is provided). if *grouped+reversed*, the items are displayed in the opposite order as *grouped*.",
                    "role": "style",
                    "flags": [
                        "reversed",
                        "grouped"
                    ],
                    "extras": [
                        "normal"
                    ]
                },
                "bgcolor": {
                    "valType": "color",
                    "description": "Sets the legend background color.",
                    "role": "style"
                }
            },
            "margin": {
                "pad": {
                    "valType": "number",
                    "description": "Sets the amount of padding (in px) between the plotting area and the axis lines",
                    "role": "info",
                    "min": 0,
                    "dflt": 0
                },
                "r": {
                    "valType": "number",
                    "description": "Sets the right margin (in px).",
                    "role": "info",
                    "min": 0,
                    "dflt": 80
                },
                "b": {
                    "valType": "number",
                    "description": "Sets the bottom margin (in px).",
                    "role": "info",
                    "min": 0,
                    "dflt": 80
                },
                "t": {
                    "valType": "number",
                    "description": "Sets the top margin (in px).",
                    "role": "info",
                    "min": 0,
                    "dflt": 100
                },
                "role": "object",
                "l": {
                    "valType": "number",
                    "description": "Sets the left margin (in px).",
                    "role": "info",
                    "min": 0,
                    "dflt": 80
                },
                "autoexpand": {
                    "valType": "boolean",
                    "role": "info",
                    "dflt": true
                }
            },
            "font": {
                "family": {
                    "noBlank": true,
                    "dflt": "\"Open Sans\", verdana, arial, sans-serif",
                    "valType": "string",
                    "strict": true,
                    "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                    "role": "style"
                },
                "description": "Sets the global font. Note that fonts used in traces and other layout components inherit from the global font.",
                "color": {
                    "valType": "color",
                    "role": "style",
                    "dflt": "#444"
                },
                "role": "object",
                "size": {
                    "valType": "number",
                    "role": "style",
                    "min": 1,
                    "dflt": 12
                }
            },
            "paper_bgcolor": {
                "valType": "color",
                "description": "Sets the color of paper where the graph is drawn.",
                "role": "style",
                "dflt": "#fff"
            },
            "smith": {
                "dflt": false,
                "valType": "enumerated",
                "role": "info",
                "values": [
                    false
                ]
            }
        }
    },
    "defs": {
        "metaKeys": [
            "_isSubplotObj",
            "_isLinkedToArray",
            "_deprecated",
            "description",
            "role"
        ],
        "valObjects": {
            "info_array": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "An {array} of plot information.",
                "requiredOpts": [
                    "items"
                ]
            },
            "color": {
                "otherOpts": [
                    "dflt",
                    "arrayOk"
                ],
                "description": "A string describing color. Supported formats: - hex (e.g. '#d3d3d3') - rgb (e.g. 'rgb(255, 0, 0)') - rgba (e.g. 'rgb(255, 0, 0, 0.5)') - hsl (e.g. 'hsl(0, 100%, 50%)') - hsv (e.g. 'hsv(0, 100%, 100%)') - named colors (full list: http://www.w3.org/TR/css3-color/#svg-color)",
                "requiredOpts": []
            },
            "number": {
                "otherOpts": [
                    "dflt",
                    "min",
                    "max",
                    "arrayOk"
                ],
                "description": "A number or a numeric value (e.g. a number inside a string). When applicable, values greater (less) than `max` (`min`) are coerced to the `dflt`.",
                "requiredOpts": []
            },
            "integer": {
                "otherOpts": [
                    "dflt",
                    "min",
                    "max"
                ],
                "description": "An integer or an integer inside a string. When applicable, values greater (less) than `max` (`min`) are coerced to the `dflt`.",
                "requiredOpts": []
            },
            "axisid": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "An axis id string (e.g. 'x', 'x2', 'x3', ...).",
                "requiredOpts": []
            },
            "angle": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "A number (in degree) between -180 and 180.",
                "requiredOpts": []
            },
            "data_array": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "An {array} of data. The value MUST be an {array}, or we ignore it.",
                "requiredOpts": []
            },
            "string": {
                "otherOpts": [
                    "dflt",
                    "noBlank",
                    "strict",
                    "arrayOk",
                    "values"
                ],
                "description": "A string value. Numbers are converted to strings except for attributes with `strict` set to true.",
                "requiredOpts": []
            },
            "geoid": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "A geo id string (e.g. 'geo', 'geo2', 'geo3', ...).",
                "requiredOpts": []
            },
            "boolean": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "A boolean (true/false) value.",
                "requiredOpts": []
            },
            "enumerated": {
                "otherOpts": [
                    "dflt",
                    "coerceNumber",
                    "arrayOk"
                ],
                "description": "Enumerated value type. The available values are listed in `values`.",
                "requiredOpts": [
                    "values"
                ]
            },
            "flaglist": {
                "otherOpts": [
                    "dflt",
                    "extras"
                ],
                "description": "A string representing a combination of flags (order does not matter here). Combine any of the available `flags` with *+*. (e.g. ('lines+markers')). Values in `extras` cannot be combined.",
                "requiredOpts": [
                    "flags"
                ]
            },
            "sceneid": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "A scene id string (e.g. 'scene', 'scene2', 'scene3', ...).",
                "requiredOpts": []
            },
            "colorscale": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "A Plotly colorscale either picked by a name: (any of Greys, YIGnBu, Greens, YIOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis ) customized as an {array} of 2-element {arrays} where the first element is the normalized color level value (starting at *0* and ending at *1*), and the second item is a valid color string.",
                "requiredOpts": []
            },
            "any": {
                "otherOpts": [
                    "dflt"
                ],
                "description": "Any type.",
                "requiredOpts": []
            }
        }
    }
}